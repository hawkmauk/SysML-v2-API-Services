@AnyMetaDefs(value = {
        @AnyMetaDef(name = "SysMLTypeMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class),
                @MetaValue(value = "ActionDefinition", targetEntity = ActionDefinitionImpl.class),
                @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class),
                @MetaValue(value = "ActorMembership", targetEntity = ActorMembershipImpl.class),
                @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class),
                @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class),
                @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class),
                @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class),
                @MetaValue(value = "AnnotatingElement", targetEntity = AnnotatingElementImpl.class),
                @MetaValue(value = "Annotation", targetEntity = AnnotationImpl.class),
                @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class),
                @MetaValue(value = "AssignmentActionUsage", targetEntity = AssignmentActionUsageImpl.class),
                @MetaValue(value = "Association", targetEntity = AssociationImpl.class),
                @MetaValue(value = "AssociationStructure", targetEntity = AssociationStructureImpl.class),
                @MetaValue(value = "AttributeDefinition", targetEntity = AttributeDefinitionImpl.class),
                @MetaValue(value = "AttributeUsage", targetEntity = AttributeUsageImpl.class),
                @MetaValue(value = "Behavior", targetEntity = BehaviorImpl.class),
                @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class),
                @MetaValue(value = "BindingConnectorAsUsage", targetEntity = BindingConnectorAsUsageImpl.class),
                @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class),
                @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class),
                @MetaValue(value = "CalculationUsage", targetEntity = CalculationUsageImpl.class),
                @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class),
                @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class),
                @MetaValue(value = "Class", targetEntity = ClassImpl.class),
                @MetaValue(value = "Classifier", targetEntity = ClassifierImpl.class),
                @MetaValue(value = "CollectExpression", targetEntity = CollectExpressionImpl.class),
                @MetaValue(value = "Comment", targetEntity = CommentImpl.class),
                @MetaValue(value = "ConcernDefinition", targetEntity = ConcernDefinitionImpl.class),
                @MetaValue(value = "ConcernUsage", targetEntity = ConcernUsageImpl.class),
                @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class),
                @MetaValue(value = "ConjugatedPortTyping", targetEntity = ConjugatedPortTypingImpl.class),
                @MetaValue(value = "Conjugation", targetEntity = ConjugationImpl.class),
                @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class),
                @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class),
                @MetaValue(value = "Connector", targetEntity = ConnectorImpl.class),
                @MetaValue(value = "ConnectorAsUsage", targetEntity = ConnectorAsUsageImpl.class),
                @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class),
                @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class),
                @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class),
                @MetaValue(value = "DataType", targetEntity = DataTypeImpl.class),
                @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class),
                @MetaValue(value = "Definition", targetEntity = DefinitionImpl.class),
                @MetaValue(value = "Dependency", targetEntity = DependencyImpl.class),
                @MetaValue(value = "Differencing", targetEntity = DifferencingImpl.class),
                @MetaValue(value = "Disjoining", targetEntity = DisjoiningImpl.class),
                @MetaValue(value = "Documentation", targetEntity = DocumentationImpl.class),
                @MetaValue(value = "Element", targetEntity = ElementImpl.class),
                @MetaValue(value = "ElementFilterMembership", targetEntity = ElementFilterMembershipImpl.class),
                @MetaValue(value = "EndFeatureMembership", targetEntity = EndFeatureMembershipImpl.class),
                @MetaValue(value = "EnumerationDefinition", targetEntity = EnumerationDefinitionImpl.class),
                @MetaValue(value = "EnumerationUsage", targetEntity = EnumerationUsageImpl.class),
                @MetaValue(value = "EventOccurrenceUsage", targetEntity = EventOccurrenceUsageImpl.class),
                @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class),
                @MetaValue(value = "Expose", targetEntity = ExposeImpl.class),
                @MetaValue(value = "Expression", targetEntity = ExpressionImpl.class),
                @MetaValue(value = "Feature", targetEntity = FeatureImpl.class),
                @MetaValue(value = "FeatureChainExpression", targetEntity = FeatureChainExpressionImpl.class),
                @MetaValue(value = "FeatureChaining", targetEntity = FeatureChainingImpl.class),
                @MetaValue(value = "FeatureInverting", targetEntity = FeatureInvertingImpl.class),
                @MetaValue(value = "FeatureMembership", targetEntity = FeatureMembershipImpl.class),
                @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class),
                @MetaValue(value = "FeatureTyping", targetEntity = FeatureTypingImpl.class),
                @MetaValue(value = "FeatureValue", targetEntity = FeatureValueImpl.class),
                @MetaValue(value = "Featuring", targetEntity = FeaturingImpl.class),
                @MetaValue(value = "FlowConnectionDefinition", targetEntity = FlowConnectionDefinitionImpl.class),
                @MetaValue(value = "FlowConnectionUsage", targetEntity = FlowConnectionUsageImpl.class),
                @MetaValue(value = "ForLoopActionUsage", targetEntity = ForLoopActionUsageImpl.class),
                @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class),
                @MetaValue(value = "FramedConcernMembership", targetEntity = FramedConcernMembershipImpl.class),
                @MetaValue(value = "Function", targetEntity = FunctionImpl.class),
                @MetaValue(value = "IfActionUsage", targetEntity = IfActionUsageImpl.class),
                @MetaValue(value = "Import", targetEntity = ImportImpl.class),
                @MetaValue(value = "IncludeUseCaseUsage", targetEntity = IncludeUseCaseUsageImpl.class),
                @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class),
                @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class),
                @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class),
                @MetaValue(value = "Intersecting", targetEntity = IntersectingImpl.class),
                @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class),
                @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class),
                @MetaValue(value = "ItemDefinition", targetEntity = ItemDefinitionImpl.class),
                @MetaValue(value = "ItemFeature", targetEntity = ItemFeatureImpl.class),
                @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class),
                @MetaValue(value = "ItemFlowEnd", targetEntity = ItemFlowEndImpl.class),
                @MetaValue(value = "ItemUsage", targetEntity = ItemUsageImpl.class),
                @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class),
                @MetaValue(value = "LibraryPackage", targetEntity = LibraryPackageImpl.class),
                @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class),
                @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class),
                @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class),
                @MetaValue(value = "LiteralInfinity", targetEntity = LiteralInfinityImpl.class),
                @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class),
                @MetaValue(value = "LiteralRational", targetEntity = LiteralRationalImpl.class),
                @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class),
                @MetaValue(value = "LoopActionUsage", targetEntity = LoopActionUsageImpl.class),
                @MetaValue(value = "Membership", targetEntity = MembershipImpl.class),
                @MetaValue(value = "MembershipExpose", targetEntity = MembershipExposeImpl.class),
                @MetaValue(value = "MembershipImport", targetEntity = MembershipImportImpl.class),
                @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class),
                @MetaValue(value = "Metaclass", targetEntity = MetaclassImpl.class),
                @MetaValue(value = "MetadataAccessExpression", targetEntity = MetadataAccessExpressionImpl.class),
                @MetaValue(value = "MetadataDefinition", targetEntity = MetadataDefinitionImpl.class),
                @MetaValue(value = "MetadataFeature", targetEntity = MetadataFeatureImpl.class),
                @MetaValue(value = "MetadataUsage", targetEntity = MetadataUsageImpl.class),
                @MetaValue(value = "Multiplicity", targetEntity = MultiplicityImpl.class),
                @MetaValue(value = "MultiplicityRange", targetEntity = MultiplicityRangeImpl.class),
                @MetaValue(value = "Namespace", targetEntity = NamespaceImpl.class),
                @MetaValue(value = "NamespaceExpose", targetEntity = NamespaceExposeImpl.class),
                @MetaValue(value = "NamespaceImport", targetEntity = NamespaceImportImpl.class),
                @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class),
                @MetaValue(value = "ObjectiveMembership", targetEntity = ObjectiveMembershipImpl.class),
                @MetaValue(value = "OccurrenceDefinition", targetEntity = OccurrenceDefinitionImpl.class),
                @MetaValue(value = "OccurrenceUsage", targetEntity = OccurrenceUsageImpl.class),
                @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class),
                @MetaValue(value = "OwningMembership", targetEntity = OwningMembershipImpl.class),
                @MetaValue(value = "Package", targetEntity = PackageImpl.class),
                @MetaValue(value = "ParameterMembership", targetEntity = ParameterMembershipImpl.class),
                @MetaValue(value = "PartDefinition", targetEntity = PartDefinitionImpl.class),
                @MetaValue(value = "PartUsage", targetEntity = PartUsageImpl.class),
                @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class),
                @MetaValue(value = "PortConjugation", targetEntity = PortConjugationImpl.class),
                @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class),
                @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class),
                @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class),
                @MetaValue(value = "Redefinition", targetEntity = RedefinitionImpl.class),
                @MetaValue(value = "ReferenceSubsetting", targetEntity = ReferenceSubsettingImpl.class),
                @MetaValue(value = "ReferenceUsage", targetEntity = ReferenceUsageImpl.class),
                @MetaValue(value = "Relationship", targetEntity = RelationshipImpl.class),
                @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class),
                @MetaValue(value = "RenderingUsage", targetEntity = RenderingUsageImpl.class),
                @MetaValue(value = "RequirementConstraintMembership", targetEntity = RequirementConstraintMembershipImpl.class),
                @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class),
                @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class),
                @MetaValue(value = "RequirementVerificationMembership", targetEntity = RequirementVerificationMembershipImpl.class),
                @MetaValue(value = "ResultExpressionMembership", targetEntity = ResultExpressionMembershipImpl.class),
                @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class),
                @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class),
                @MetaValue(value = "SelectExpression", targetEntity = SelectExpressionImpl.class),
                @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class),
                @MetaValue(value = "Specialization", targetEntity = SpecializationImpl.class),
                @MetaValue(value = "StakeholderMembership", targetEntity = StakeholderMembershipImpl.class),
                @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class),
                @MetaValue(value = "StateSubactionMembership", targetEntity = StateSubactionMembershipImpl.class),
                @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class),
                @MetaValue(value = "Step", targetEntity = StepImpl.class),
                @MetaValue(value = "Structure", targetEntity = StructureImpl.class),
                @MetaValue(value = "Subclassification", targetEntity = SubclassificationImpl.class),
                @MetaValue(value = "SubjectMembership", targetEntity = SubjectMembershipImpl.class),
                @MetaValue(value = "Subsetting", targetEntity = SubsettingImpl.class),
                @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class),
                @MetaValue(value = "SuccessionAsUsage", targetEntity = SuccessionAsUsageImpl.class),
                @MetaValue(value = "SuccessionFlowConnectionUsage", targetEntity = SuccessionFlowConnectionUsageImpl.class),
                @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class),
                @MetaValue(value = "TerminateActionUsage", targetEntity = TerminateActionUsageImpl.class),
                @MetaValue(value = "TextualRepresentation", targetEntity = TextualRepresentationImpl.class),
                @MetaValue(value = "TransitionFeatureMembership", targetEntity = TransitionFeatureMembershipImpl.class),
                @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class),
                @MetaValue(value = "TriggerInvocationExpression", targetEntity = TriggerInvocationExpressionImpl.class),
                @MetaValue(value = "Type", targetEntity = TypeImpl.class),
                @MetaValue(value = "TypeFeaturing", targetEntity = TypeFeaturingImpl.class),
                @MetaValue(value = "Unioning", targetEntity = UnioningImpl.class),
                @MetaValue(value = "Usage", targetEntity = UsageImpl.class),
                @MetaValue(value = "UseCaseDefinition", targetEntity = UseCaseDefinitionImpl.class),
                @MetaValue(value = "UseCaseUsage", targetEntity = UseCaseUsageImpl.class),
                @MetaValue(value = "VariantMembership", targetEntity = VariantMembershipImpl.class),
                @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class),
                @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class),
                @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class),
                @MetaValue(value = "ViewRenderingMembership", targetEntity = ViewRenderingMembershipImpl.class),
                @MetaValue(value = "ViewUsage", targetEntity = ViewUsageImpl.class),
                @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class),
                @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class),
                @MetaValue(value = "WhileLoopActionUsage", targetEntity = WhileLoopActionUsageImpl.class),
        }),
        @AnyMetaDef(name = "AcceptActionUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "ActionDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ActionDefinition", targetEntity = ActionDefinitionImpl.class), 
                @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class), 
                @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class), 
                @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class), 
                @MetaValue(value = "FlowConnectionDefinition", targetEntity = FlowConnectionDefinitionImpl.class), 
                @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class), 
                @MetaValue(value = "UseCaseDefinition", targetEntity = UseCaseDefinitionImpl.class), 
                @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "ActionUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class), 
                @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class), 
                @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class), 
                @MetaValue(value = "AssignmentActionUsage", targetEntity = AssignmentActionUsageImpl.class), 
                @MetaValue(value = "CalculationUsage", targetEntity = CalculationUsageImpl.class), 
                @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class), 
                @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class), 
                @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class), 
                @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class), 
                @MetaValue(value = "FlowConnectionUsage", targetEntity = FlowConnectionUsageImpl.class), 
                @MetaValue(value = "ForLoopActionUsage", targetEntity = ForLoopActionUsageImpl.class), 
                @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class), 
                @MetaValue(value = "IfActionUsage", targetEntity = IfActionUsageImpl.class), 
                @MetaValue(value = "IncludeUseCaseUsage", targetEntity = IncludeUseCaseUsageImpl.class), 
                @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class), 
                @MetaValue(value = "LoopActionUsage", targetEntity = LoopActionUsageImpl.class), 
                @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class), 
                @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class), 
                @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class), 
                @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class), 
                @MetaValue(value = "SuccessionFlowConnectionUsage", targetEntity = SuccessionFlowConnectionUsageImpl.class), 
                @MetaValue(value = "TerminateActionUsage", targetEntity = TerminateActionUsageImpl.class), 
                @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class), 
                @MetaValue(value = "UseCaseUsage", targetEntity = UseCaseUsageImpl.class), 
                @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class), 
                @MetaValue(value = "WhileLoopActionUsage", targetEntity = WhileLoopActionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "ActorMembershipMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ActorMembership", targetEntity = ActorMembershipImpl.class), 
        }),
        @AnyMetaDef(name = "AllocationDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "AllocationUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class), 
        }),
        @AnyMetaDef(name = "AnalysisCaseDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "AnalysisCaseUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class), 
        }),
        @AnyMetaDef(name = "AnnotatingElementMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AnnotatingElement", targetEntity = AnnotatingElementImpl.class), 
                @MetaValue(value = "Comment", targetEntity = CommentImpl.class), 
                @MetaValue(value = "Documentation", targetEntity = DocumentationImpl.class), 
                @MetaValue(value = "MetadataFeature", targetEntity = MetadataFeatureImpl.class), 
                @MetaValue(value = "MetadataUsage", targetEntity = MetadataUsageImpl.class), 
                @MetaValue(value = "TextualRepresentation", targetEntity = TextualRepresentationImpl.class), 
        }),
        @AnyMetaDef(name = "AnnotationMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "Annotation", targetEntity = AnnotationImpl.class), 
        }),
        @AnyMetaDef(name = "AssertConstraintUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class), 
                @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class), 
        }),
        @AnyMetaDef(name = "AssignmentActionUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AssignmentActionUsage", targetEntity = AssignmentActionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "AssociationMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class), 
                @MetaValue(value = "Association", targetEntity = AssociationImpl.class), 
                @MetaValue(value = "AssociationStructure", targetEntity = AssociationStructureImpl.class), 
                @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class), 
                @MetaValue(value = "FlowConnectionDefinition", targetEntity = FlowConnectionDefinitionImpl.class), 
                @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class), 
                @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "AssociationStructureMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class), 
                @MetaValue(value = "AssociationStructure", targetEntity = AssociationStructureImpl.class), 
                @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class), 
                @MetaValue(value = "FlowConnectionDefinition", targetEntity = FlowConnectionDefinitionImpl.class), 
                @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "AttributeDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AttributeDefinition", targetEntity = AttributeDefinitionImpl.class), 
                @MetaValue(value = "EnumerationDefinition", targetEntity = EnumerationDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "AttributeUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AttributeUsage", targetEntity = AttributeUsageImpl.class), 
                @MetaValue(value = "EnumerationUsage", targetEntity = EnumerationUsageImpl.class), 
        }),
        @AnyMetaDef(name = "BehaviorMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ActionDefinition", targetEntity = ActionDefinitionImpl.class), 
                @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class), 
                @MetaValue(value = "Behavior", targetEntity = BehaviorImpl.class), 
                @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class), 
                @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class), 
                @MetaValue(value = "ConcernDefinition", targetEntity = ConcernDefinitionImpl.class), 
                @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class), 
                @MetaValue(value = "FlowConnectionDefinition", targetEntity = FlowConnectionDefinitionImpl.class), 
                @MetaValue(value = "Function", targetEntity = FunctionImpl.class), 
                @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class), 
                @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class), 
                @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class), 
                @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class), 
                @MetaValue(value = "UseCaseDefinition", targetEntity = UseCaseDefinitionImpl.class), 
                @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class), 
                @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "BindingConnectorMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class), 
                @MetaValue(value = "BindingConnectorAsUsage", targetEntity = BindingConnectorAsUsageImpl.class), 
        }),
        @AnyMetaDef(name = "BindingConnectorAsUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "BindingConnectorAsUsage", targetEntity = BindingConnectorAsUsageImpl.class), 
        }),
        @AnyMetaDef(name = "BooleanExpressionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class), 
                @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class), 
                @MetaValue(value = "ConcernUsage", targetEntity = ConcernUsageImpl.class), 
                @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class), 
                @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class), 
                @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class), 
                @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class), 
                @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class), 
        }),
        @AnyMetaDef(name = "CalculationDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class), 
                @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class), 
                @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class), 
                @MetaValue(value = "UseCaseDefinition", targetEntity = UseCaseDefinitionImpl.class), 
                @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "CalculationUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class), 
                @MetaValue(value = "CalculationUsage", targetEntity = CalculationUsageImpl.class), 
                @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class), 
                @MetaValue(value = "IncludeUseCaseUsage", targetEntity = IncludeUseCaseUsageImpl.class), 
                @MetaValue(value = "UseCaseUsage", targetEntity = UseCaseUsageImpl.class), 
                @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class), 
        }),
        @AnyMetaDef(name = "CaseDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class), 
                @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class), 
                @MetaValue(value = "UseCaseDefinition", targetEntity = UseCaseDefinitionImpl.class), 
                @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "CaseUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class), 
                @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class), 
                @MetaValue(value = "IncludeUseCaseUsage", targetEntity = IncludeUseCaseUsageImpl.class), 
                @MetaValue(value = "UseCaseUsage", targetEntity = UseCaseUsageImpl.class), 
                @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class), 
        }),
        @AnyMetaDef(name = "ClassMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ActionDefinition", targetEntity = ActionDefinitionImpl.class), 
                @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class), 
                @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class), 
                @MetaValue(value = "AssociationStructure", targetEntity = AssociationStructureImpl.class), 
                @MetaValue(value = "Behavior", targetEntity = BehaviorImpl.class), 
                @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class), 
                @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class), 
                @MetaValue(value = "Class", targetEntity = ClassImpl.class), 
                @MetaValue(value = "ConcernDefinition", targetEntity = ConcernDefinitionImpl.class), 
                @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class), 
                @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class), 
                @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class), 
                @MetaValue(value = "FlowConnectionDefinition", targetEntity = FlowConnectionDefinitionImpl.class), 
                @MetaValue(value = "Function", targetEntity = FunctionImpl.class), 
                @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class), 
                @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class), 
                @MetaValue(value = "ItemDefinition", targetEntity = ItemDefinitionImpl.class), 
                @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class), 
                @MetaValue(value = "Metaclass", targetEntity = MetaclassImpl.class), 
                @MetaValue(value = "MetadataDefinition", targetEntity = MetadataDefinitionImpl.class), 
                @MetaValue(value = "OccurrenceDefinition", targetEntity = OccurrenceDefinitionImpl.class), 
                @MetaValue(value = "PartDefinition", targetEntity = PartDefinitionImpl.class), 
                @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class), 
                @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class), 
                @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class), 
                @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class), 
                @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class), 
                @MetaValue(value = "Structure", targetEntity = StructureImpl.class), 
                @MetaValue(value = "UseCaseDefinition", targetEntity = UseCaseDefinitionImpl.class), 
                @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class), 
                @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class), 
                @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "ClassifierMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ActionDefinition", targetEntity = ActionDefinitionImpl.class), 
                @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class), 
                @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class), 
                @MetaValue(value = "Association", targetEntity = AssociationImpl.class), 
                @MetaValue(value = "AssociationStructure", targetEntity = AssociationStructureImpl.class), 
                @MetaValue(value = "AttributeDefinition", targetEntity = AttributeDefinitionImpl.class), 
                @MetaValue(value = "Behavior", targetEntity = BehaviorImpl.class), 
                @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class), 
                @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class), 
                @MetaValue(value = "Class", targetEntity = ClassImpl.class), 
                @MetaValue(value = "Classifier", targetEntity = ClassifierImpl.class), 
                @MetaValue(value = "ConcernDefinition", targetEntity = ConcernDefinitionImpl.class), 
                @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class), 
                @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class), 
                @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class), 
                @MetaValue(value = "DataType", targetEntity = DataTypeImpl.class), 
                @MetaValue(value = "Definition", targetEntity = DefinitionImpl.class), 
                @MetaValue(value = "EnumerationDefinition", targetEntity = EnumerationDefinitionImpl.class), 
                @MetaValue(value = "FlowConnectionDefinition", targetEntity = FlowConnectionDefinitionImpl.class), 
                @MetaValue(value = "Function", targetEntity = FunctionImpl.class), 
                @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class), 
                @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class), 
                @MetaValue(value = "ItemDefinition", targetEntity = ItemDefinitionImpl.class), 
                @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class), 
                @MetaValue(value = "Metaclass", targetEntity = MetaclassImpl.class), 
                @MetaValue(value = "MetadataDefinition", targetEntity = MetadataDefinitionImpl.class), 
                @MetaValue(value = "OccurrenceDefinition", targetEntity = OccurrenceDefinitionImpl.class), 
                @MetaValue(value = "PartDefinition", targetEntity = PartDefinitionImpl.class), 
                @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class), 
                @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class), 
                @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class), 
                @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class), 
                @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class), 
                @MetaValue(value = "Structure", targetEntity = StructureImpl.class), 
                @MetaValue(value = "UseCaseDefinition", targetEntity = UseCaseDefinitionImpl.class), 
                @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class), 
                @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class), 
                @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "CollectExpressionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "CollectExpression", targetEntity = CollectExpressionImpl.class), 
        }),
        @AnyMetaDef(name = "CommentMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "Comment", targetEntity = CommentImpl.class), 
                @MetaValue(value = "Documentation", targetEntity = DocumentationImpl.class), 
        }),
        @AnyMetaDef(name = "ConcernDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ConcernDefinition", targetEntity = ConcernDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "ConcernUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ConcernUsage", targetEntity = ConcernUsageImpl.class), 
        }),
        @AnyMetaDef(name = "ConjugatedPortDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "ConjugatedPortTypingMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ConjugatedPortTyping", targetEntity = ConjugatedPortTypingImpl.class), 
        }),
        @AnyMetaDef(name = "ConjugationMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "Conjugation", targetEntity = ConjugationImpl.class), 
                @MetaValue(value = "PortConjugation", targetEntity = PortConjugationImpl.class), 
        }),
        @AnyMetaDef(name = "ConnectionDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class), 
                @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class), 
                @MetaValue(value = "FlowConnectionDefinition", targetEntity = FlowConnectionDefinitionImpl.class), 
                @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "ConnectionUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class), 
                @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class), 
                @MetaValue(value = "FlowConnectionUsage", targetEntity = FlowConnectionUsageImpl.class), 
                @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class), 
                @MetaValue(value = "SuccessionFlowConnectionUsage", targetEntity = SuccessionFlowConnectionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "ConnectorMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class), 
                @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class), 
                @MetaValue(value = "BindingConnectorAsUsage", targetEntity = BindingConnectorAsUsageImpl.class), 
                @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class), 
                @MetaValue(value = "Connector", targetEntity = ConnectorImpl.class), 
                @MetaValue(value = "ConnectorAsUsage", targetEntity = ConnectorAsUsageImpl.class), 
                @MetaValue(value = "FlowConnectionUsage", targetEntity = FlowConnectionUsageImpl.class), 
                @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class), 
                @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class), 
                @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class), 
                @MetaValue(value = "SuccessionAsUsage", targetEntity = SuccessionAsUsageImpl.class), 
                @MetaValue(value = "SuccessionFlowConnectionUsage", targetEntity = SuccessionFlowConnectionUsageImpl.class), 
                @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class), 
        }),
        @AnyMetaDef(name = "ConnectorAsUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class), 
                @MetaValue(value = "BindingConnectorAsUsage", targetEntity = BindingConnectorAsUsageImpl.class), 
                @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class), 
                @MetaValue(value = "ConnectorAsUsage", targetEntity = ConnectorAsUsageImpl.class), 
                @MetaValue(value = "FlowConnectionUsage", targetEntity = FlowConnectionUsageImpl.class), 
                @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class), 
                @MetaValue(value = "SuccessionAsUsage", targetEntity = SuccessionAsUsageImpl.class), 
                @MetaValue(value = "SuccessionFlowConnectionUsage", targetEntity = SuccessionFlowConnectionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "ConstraintDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ConcernDefinition", targetEntity = ConcernDefinitionImpl.class), 
                @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class), 
                @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class), 
                @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "ConstraintUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class), 
                @MetaValue(value = "ConcernUsage", targetEntity = ConcernUsageImpl.class), 
                @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class), 
                @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class), 
                @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class), 
                @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class), 
        }),
        @AnyMetaDef(name = "ControlNodeMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class), 
                @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class), 
                @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class), 
                @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class), 
                @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class), 
        }),
        @AnyMetaDef(name = "DataTypeMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AttributeDefinition", targetEntity = AttributeDefinitionImpl.class), 
                @MetaValue(value = "DataType", targetEntity = DataTypeImpl.class), 
                @MetaValue(value = "EnumerationDefinition", targetEntity = EnumerationDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "DecisionNodeMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class), 
        }),
        @AnyMetaDef(name = "DefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ActionDefinition", targetEntity = ActionDefinitionImpl.class), 
                @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class), 
                @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class), 
                @MetaValue(value = "AttributeDefinition", targetEntity = AttributeDefinitionImpl.class), 
                @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class), 
                @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class), 
                @MetaValue(value = "ConcernDefinition", targetEntity = ConcernDefinitionImpl.class), 
                @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class), 
                @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class), 
                @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class), 
                @MetaValue(value = "Definition", targetEntity = DefinitionImpl.class), 
                @MetaValue(value = "EnumerationDefinition", targetEntity = EnumerationDefinitionImpl.class), 
                @MetaValue(value = "FlowConnectionDefinition", targetEntity = FlowConnectionDefinitionImpl.class), 
                @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class), 
                @MetaValue(value = "ItemDefinition", targetEntity = ItemDefinitionImpl.class), 
                @MetaValue(value = "MetadataDefinition", targetEntity = MetadataDefinitionImpl.class), 
                @MetaValue(value = "OccurrenceDefinition", targetEntity = OccurrenceDefinitionImpl.class), 
                @MetaValue(value = "PartDefinition", targetEntity = PartDefinitionImpl.class), 
                @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class), 
                @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class), 
                @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class), 
                @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class), 
                @MetaValue(value = "UseCaseDefinition", targetEntity = UseCaseDefinitionImpl.class), 
                @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class), 
                @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class), 
                @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "DependencyMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "Dependency", targetEntity = DependencyImpl.class), 
        }),
        @AnyMetaDef(name = "DifferencingMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "Differencing", targetEntity = DifferencingImpl.class), 
        }),
        @AnyMetaDef(name = "DisjoiningMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "Disjoining", targetEntity = DisjoiningImpl.class), 
        }),
        @AnyMetaDef(name = "DocumentationMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "Documentation", targetEntity = DocumentationImpl.class), 
        }),
        @AnyMetaDef(name = "ElementMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class), 
                @MetaValue(value = "ActionDefinition", targetEntity = ActionDefinitionImpl.class), 
                @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class), 
                @MetaValue(value = "ActorMembership", targetEntity = ActorMembershipImpl.class), 
                @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class), 
                @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class), 
                @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class), 
                @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class), 
                @MetaValue(value = "AnnotatingElement", targetEntity = AnnotatingElementImpl.class), 
                @MetaValue(value = "Annotation", targetEntity = AnnotationImpl.class), 
                @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class), 
                @MetaValue(value = "AssignmentActionUsage", targetEntity = AssignmentActionUsageImpl.class), 
                @MetaValue(value = "Association", targetEntity = AssociationImpl.class), 
                @MetaValue(value = "AssociationStructure", targetEntity = AssociationStructureImpl.class), 
                @MetaValue(value = "AttributeDefinition", targetEntity = AttributeDefinitionImpl.class), 
                @MetaValue(value = "AttributeUsage", targetEntity = AttributeUsageImpl.class), 
                @MetaValue(value = "Behavior", targetEntity = BehaviorImpl.class), 
                @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class), 
                @MetaValue(value = "BindingConnectorAsUsage", targetEntity = BindingConnectorAsUsageImpl.class), 
                @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class), 
                @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class), 
                @MetaValue(value = "CalculationUsage", targetEntity = CalculationUsageImpl.class), 
                @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class), 
                @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class), 
                @MetaValue(value = "Class", targetEntity = ClassImpl.class), 
                @MetaValue(value = "Classifier", targetEntity = ClassifierImpl.class), 
                @MetaValue(value = "CollectExpression", targetEntity = CollectExpressionImpl.class), 
                @MetaValue(value = "Comment", targetEntity = CommentImpl.class), 
                @MetaValue(value = "ConcernDefinition", targetEntity = ConcernDefinitionImpl.class), 
                @MetaValue(value = "ConcernUsage", targetEntity = ConcernUsageImpl.class), 
                @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class), 
                @MetaValue(value = "ConjugatedPortTyping", targetEntity = ConjugatedPortTypingImpl.class), 
                @MetaValue(value = "Conjugation", targetEntity = ConjugationImpl.class), 
                @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class), 
                @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class), 
                @MetaValue(value = "Connector", targetEntity = ConnectorImpl.class), 
                @MetaValue(value = "ConnectorAsUsage", targetEntity = ConnectorAsUsageImpl.class), 
                @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class), 
                @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class), 
                @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class), 
                @MetaValue(value = "DataType", targetEntity = DataTypeImpl.class), 
                @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class), 
                @MetaValue(value = "Definition", targetEntity = DefinitionImpl.class), 
                @MetaValue(value = "Dependency", targetEntity = DependencyImpl.class), 
                @MetaValue(value = "Differencing", targetEntity = DifferencingImpl.class), 
                @MetaValue(value = "Disjoining", targetEntity = DisjoiningImpl.class), 
                @MetaValue(value = "Documentation", targetEntity = DocumentationImpl.class), 
                @MetaValue(value = "Element", targetEntity = ElementImpl.class), 
                @MetaValue(value = "ElementFilterMembership", targetEntity = ElementFilterMembershipImpl.class), 
                @MetaValue(value = "EndFeatureMembership", targetEntity = EndFeatureMembershipImpl.class), 
                @MetaValue(value = "EnumerationDefinition", targetEntity = EnumerationDefinitionImpl.class), 
                @MetaValue(value = "EnumerationUsage", targetEntity = EnumerationUsageImpl.class), 
                @MetaValue(value = "EventOccurrenceUsage", targetEntity = EventOccurrenceUsageImpl.class), 
                @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class), 
                @MetaValue(value = "Expose", targetEntity = ExposeImpl.class), 
                @MetaValue(value = "Expression", targetEntity = ExpressionImpl.class), 
                @MetaValue(value = "Feature", targetEntity = FeatureImpl.class), 
                @MetaValue(value = "FeatureChainExpression", targetEntity = FeatureChainExpressionImpl.class), 
                @MetaValue(value = "FeatureChaining", targetEntity = FeatureChainingImpl.class), 
                @MetaValue(value = "FeatureInverting", targetEntity = FeatureInvertingImpl.class), 
                @MetaValue(value = "FeatureMembership", targetEntity = FeatureMembershipImpl.class), 
                @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class), 
                @MetaValue(value = "FeatureTyping", targetEntity = FeatureTypingImpl.class), 
                @MetaValue(value = "FeatureValue", targetEntity = FeatureValueImpl.class), 
                @MetaValue(value = "Featuring", targetEntity = FeaturingImpl.class), 
                @MetaValue(value = "FlowConnectionDefinition", targetEntity = FlowConnectionDefinitionImpl.class), 
                @MetaValue(value = "FlowConnectionUsage", targetEntity = FlowConnectionUsageImpl.class), 
                @MetaValue(value = "ForLoopActionUsage", targetEntity = ForLoopActionUsageImpl.class), 
                @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class), 
                @MetaValue(value = "FramedConcernMembership", targetEntity = FramedConcernMembershipImpl.class), 
                @MetaValue(value = "Function", targetEntity = FunctionImpl.class), 
                @MetaValue(value = "IfActionUsage", targetEntity = IfActionUsageImpl.class), 
                @MetaValue(value = "Import", targetEntity = ImportImpl.class), 
                @MetaValue(value = "IncludeUseCaseUsage", targetEntity = IncludeUseCaseUsageImpl.class), 
                @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class), 
                @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class), 
                @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class), 
                @MetaValue(value = "Intersecting", targetEntity = IntersectingImpl.class), 
                @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class), 
                @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class), 
                @MetaValue(value = "ItemDefinition", targetEntity = ItemDefinitionImpl.class), 
                @MetaValue(value = "ItemFeature", targetEntity = ItemFeatureImpl.class), 
                @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class), 
                @MetaValue(value = "ItemFlowEnd", targetEntity = ItemFlowEndImpl.class), 
                @MetaValue(value = "ItemUsage", targetEntity = ItemUsageImpl.class), 
                @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class), 
                @MetaValue(value = "LibraryPackage", targetEntity = LibraryPackageImpl.class), 
                @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class), 
                @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class), 
                @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class), 
                @MetaValue(value = "LiteralInfinity", targetEntity = LiteralInfinityImpl.class), 
                @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class), 
                @MetaValue(value = "LiteralRational", targetEntity = LiteralRationalImpl.class), 
                @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class), 
                @MetaValue(value = "LoopActionUsage", targetEntity = LoopActionUsageImpl.class), 
                @MetaValue(value = "Membership", targetEntity = MembershipImpl.class), 
                @MetaValue(value = "MembershipExpose", targetEntity = MembershipExposeImpl.class), 
                @MetaValue(value = "MembershipImport", targetEntity = MembershipImportImpl.class), 
                @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class), 
                @MetaValue(value = "Metaclass", targetEntity = MetaclassImpl.class), 
                @MetaValue(value = "MetadataAccessExpression", targetEntity = MetadataAccessExpressionImpl.class), 
                @MetaValue(value = "MetadataDefinition", targetEntity = MetadataDefinitionImpl.class), 
                @MetaValue(value = "MetadataFeature", targetEntity = MetadataFeatureImpl.class), 
                @MetaValue(value = "MetadataUsage", targetEntity = MetadataUsageImpl.class), 
                @MetaValue(value = "Multiplicity", targetEntity = MultiplicityImpl.class), 
                @MetaValue(value = "MultiplicityRange", targetEntity = MultiplicityRangeImpl.class), 
                @MetaValue(value = "Namespace", targetEntity = NamespaceImpl.class), 
                @MetaValue(value = "NamespaceExpose", targetEntity = NamespaceExposeImpl.class), 
                @MetaValue(value = "NamespaceImport", targetEntity = NamespaceImportImpl.class), 
                @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class), 
                @MetaValue(value = "ObjectiveMembership", targetEntity = ObjectiveMembershipImpl.class), 
                @MetaValue(value = "OccurrenceDefinition", targetEntity = OccurrenceDefinitionImpl.class), 
                @MetaValue(value = "OccurrenceUsage", targetEntity = OccurrenceUsageImpl.class), 
                @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class), 
                @MetaValue(value = "OwningMembership", targetEntity = OwningMembershipImpl.class), 
                @MetaValue(value = "Package", targetEntity = PackageImpl.class), 
                @MetaValue(value = "ParameterMembership", targetEntity = ParameterMembershipImpl.class), 
                @MetaValue(value = "PartDefinition", targetEntity = PartDefinitionImpl.class), 
                @MetaValue(value = "PartUsage", targetEntity = PartUsageImpl.class), 
                @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class), 
                @MetaValue(value = "PortConjugation", targetEntity = PortConjugationImpl.class), 
                @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class), 
                @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class), 
                @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class), 
                @MetaValue(value = "Redefinition", targetEntity = RedefinitionImpl.class), 
                @MetaValue(value = "ReferenceSubsetting", targetEntity = ReferenceSubsettingImpl.class), 
                @MetaValue(value = "ReferenceUsage", targetEntity = ReferenceUsageImpl.class), 
                @MetaValue(value = "Relationship", targetEntity = RelationshipImpl.class), 
                @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class), 
                @MetaValue(value = "RenderingUsage", targetEntity = RenderingUsageImpl.class), 
                @MetaValue(value = "RequirementConstraintMembership", targetEntity = RequirementConstraintMembershipImpl.class), 
                @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class), 
                @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class), 
                @MetaValue(value = "RequirementVerificationMembership", targetEntity = RequirementVerificationMembershipImpl.class), 
                @MetaValue(value = "ResultExpressionMembership", targetEntity = ResultExpressionMembershipImpl.class), 
                @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class), 
                @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class), 
                @MetaValue(value = "SelectExpression", targetEntity = SelectExpressionImpl.class), 
                @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class), 
                @MetaValue(value = "Specialization", targetEntity = SpecializationImpl.class), 
                @MetaValue(value = "StakeholderMembership", targetEntity = StakeholderMembershipImpl.class), 
                @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class), 
                @MetaValue(value = "StateSubactionMembership", targetEntity = StateSubactionMembershipImpl.class), 
                @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class), 
                @MetaValue(value = "Step", targetEntity = StepImpl.class), 
                @MetaValue(value = "Structure", targetEntity = StructureImpl.class), 
                @MetaValue(value = "Subclassification", targetEntity = SubclassificationImpl.class), 
                @MetaValue(value = "SubjectMembership", targetEntity = SubjectMembershipImpl.class), 
                @MetaValue(value = "Subsetting", targetEntity = SubsettingImpl.class), 
                @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class), 
                @MetaValue(value = "SuccessionAsUsage", targetEntity = SuccessionAsUsageImpl.class), 
                @MetaValue(value = "SuccessionFlowConnectionUsage", targetEntity = SuccessionFlowConnectionUsageImpl.class), 
                @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class), 
                @MetaValue(value = "TerminateActionUsage", targetEntity = TerminateActionUsageImpl.class), 
                @MetaValue(value = "TextualRepresentation", targetEntity = TextualRepresentationImpl.class), 
                @MetaValue(value = "TransitionFeatureMembership", targetEntity = TransitionFeatureMembershipImpl.class), 
                @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class), 
                @MetaValue(value = "TriggerInvocationExpression", targetEntity = TriggerInvocationExpressionImpl.class), 
                @MetaValue(value = "Type", targetEntity = TypeImpl.class), 
                @MetaValue(value = "TypeFeaturing", targetEntity = TypeFeaturingImpl.class), 
                @MetaValue(value = "Unioning", targetEntity = UnioningImpl.class), 
                @MetaValue(value = "Usage", targetEntity = UsageImpl.class), 
                @MetaValue(value = "UseCaseDefinition", targetEntity = UseCaseDefinitionImpl.class), 
                @MetaValue(value = "UseCaseUsage", targetEntity = UseCaseUsageImpl.class), 
                @MetaValue(value = "VariantMembership", targetEntity = VariantMembershipImpl.class), 
                @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class), 
                @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class), 
                @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class), 
                @MetaValue(value = "ViewRenderingMembership", targetEntity = ViewRenderingMembershipImpl.class), 
                @MetaValue(value = "ViewUsage", targetEntity = ViewUsageImpl.class), 
                @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class), 
                @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class), 
                @MetaValue(value = "WhileLoopActionUsage", targetEntity = WhileLoopActionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "ElementFilterMembershipMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ElementFilterMembership", targetEntity = ElementFilterMembershipImpl.class), 
        }),
        @AnyMetaDef(name = "EndFeatureMembershipMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "EndFeatureMembership", targetEntity = EndFeatureMembershipImpl.class), 
        }),
        @AnyMetaDef(name = "EnumerationDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "EnumerationDefinition", targetEntity = EnumerationDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "EnumerationUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "EnumerationUsage", targetEntity = EnumerationUsageImpl.class), 
        }),
        @AnyMetaDef(name = "EventOccurrenceUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "EventOccurrenceUsage", targetEntity = EventOccurrenceUsageImpl.class), 
                @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class), 
                @MetaValue(value = "IncludeUseCaseUsage", targetEntity = IncludeUseCaseUsageImpl.class), 
                @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "ExhibitStateUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class), 
        }),
        @AnyMetaDef(name = "ExposeMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "Expose", targetEntity = ExposeImpl.class), 
                @MetaValue(value = "MembershipExpose", targetEntity = MembershipExposeImpl.class), 
                @MetaValue(value = "NamespaceExpose", targetEntity = NamespaceExposeImpl.class), 
        }),
        @AnyMetaDef(name = "ExpressionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class), 
                @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class), 
                @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class), 
                @MetaValue(value = "CalculationUsage", targetEntity = CalculationUsageImpl.class), 
                @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class), 
                @MetaValue(value = "CollectExpression", targetEntity = CollectExpressionImpl.class), 
                @MetaValue(value = "ConcernUsage", targetEntity = ConcernUsageImpl.class), 
                @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class), 
                @MetaValue(value = "Expression", targetEntity = ExpressionImpl.class), 
                @MetaValue(value = "FeatureChainExpression", targetEntity = FeatureChainExpressionImpl.class), 
                @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class), 
                @MetaValue(value = "IncludeUseCaseUsage", targetEntity = IncludeUseCaseUsageImpl.class), 
                @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class), 
                @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class), 
                @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class), 
                @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class), 
                @MetaValue(value = "LiteralInfinity", targetEntity = LiteralInfinityImpl.class), 
                @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class), 
                @MetaValue(value = "LiteralRational", targetEntity = LiteralRationalImpl.class), 
                @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class), 
                @MetaValue(value = "MetadataAccessExpression", targetEntity = MetadataAccessExpressionImpl.class), 
                @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class), 
                @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class), 
                @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class), 
                @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class), 
                @MetaValue(value = "SelectExpression", targetEntity = SelectExpressionImpl.class), 
                @MetaValue(value = "TriggerInvocationExpression", targetEntity = TriggerInvocationExpressionImpl.class), 
                @MetaValue(value = "UseCaseUsage", targetEntity = UseCaseUsageImpl.class), 
                @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class), 
                @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class), 
        }),
        @AnyMetaDef(name = "FeatureMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class), 
                @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class), 
                @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class), 
                @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class), 
                @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class), 
                @MetaValue(value = "AssignmentActionUsage", targetEntity = AssignmentActionUsageImpl.class), 
                @MetaValue(value = "AttributeUsage", targetEntity = AttributeUsageImpl.class), 
                @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class), 
                @MetaValue(value = "BindingConnectorAsUsage", targetEntity = BindingConnectorAsUsageImpl.class), 
                @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class), 
                @MetaValue(value = "CalculationUsage", targetEntity = CalculationUsageImpl.class), 
                @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class), 
                @MetaValue(value = "CollectExpression", targetEntity = CollectExpressionImpl.class), 
                @MetaValue(value = "ConcernUsage", targetEntity = ConcernUsageImpl.class), 
                @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class), 
                @MetaValue(value = "Connector", targetEntity = ConnectorImpl.class), 
                @MetaValue(value = "ConnectorAsUsage", targetEntity = ConnectorAsUsageImpl.class), 
                @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class), 
                @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class), 
                @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class), 
                @MetaValue(value = "EnumerationUsage", targetEntity = EnumerationUsageImpl.class), 
                @MetaValue(value = "EventOccurrenceUsage", targetEntity = EventOccurrenceUsageImpl.class), 
                @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class), 
                @MetaValue(value = "Expression", targetEntity = ExpressionImpl.class), 
                @MetaValue(value = "Feature", targetEntity = FeatureImpl.class), 
                @MetaValue(value = "FeatureChainExpression", targetEntity = FeatureChainExpressionImpl.class), 
                @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class), 
                @MetaValue(value = "FlowConnectionUsage", targetEntity = FlowConnectionUsageImpl.class), 
                @MetaValue(value = "ForLoopActionUsage", targetEntity = ForLoopActionUsageImpl.class), 
                @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class), 
                @MetaValue(value = "IfActionUsage", targetEntity = IfActionUsageImpl.class), 
                @MetaValue(value = "IncludeUseCaseUsage", targetEntity = IncludeUseCaseUsageImpl.class), 
                @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class), 
                @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class), 
                @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class), 
                @MetaValue(value = "ItemFeature", targetEntity = ItemFeatureImpl.class), 
                @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class), 
                @MetaValue(value = "ItemFlowEnd", targetEntity = ItemFlowEndImpl.class), 
                @MetaValue(value = "ItemUsage", targetEntity = ItemUsageImpl.class), 
                @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class), 
                @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class), 
                @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class), 
                @MetaValue(value = "LiteralInfinity", targetEntity = LiteralInfinityImpl.class), 
                @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class), 
                @MetaValue(value = "LiteralRational", targetEntity = LiteralRationalImpl.class), 
                @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class), 
                @MetaValue(value = "LoopActionUsage", targetEntity = LoopActionUsageImpl.class), 
                @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class), 
                @MetaValue(value = "MetadataAccessExpression", targetEntity = MetadataAccessExpressionImpl.class), 
                @MetaValue(value = "MetadataFeature", targetEntity = MetadataFeatureImpl.class), 
                @MetaValue(value = "MetadataUsage", targetEntity = MetadataUsageImpl.class), 
                @MetaValue(value = "Multiplicity", targetEntity = MultiplicityImpl.class), 
                @MetaValue(value = "MultiplicityRange", targetEntity = MultiplicityRangeImpl.class), 
                @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class), 
                @MetaValue(value = "OccurrenceUsage", targetEntity = OccurrenceUsageImpl.class), 
                @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class), 
                @MetaValue(value = "PartUsage", targetEntity = PartUsageImpl.class), 
                @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class), 
                @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class), 
                @MetaValue(value = "ReferenceUsage", targetEntity = ReferenceUsageImpl.class), 
                @MetaValue(value = "RenderingUsage", targetEntity = RenderingUsageImpl.class), 
                @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class), 
                @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class), 
                @MetaValue(value = "SelectExpression", targetEntity = SelectExpressionImpl.class), 
                @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class), 
                @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class), 
                @MetaValue(value = "Step", targetEntity = StepImpl.class), 
                @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class), 
                @MetaValue(value = "SuccessionAsUsage", targetEntity = SuccessionAsUsageImpl.class), 
                @MetaValue(value = "SuccessionFlowConnectionUsage", targetEntity = SuccessionFlowConnectionUsageImpl.class), 
                @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class), 
                @MetaValue(value = "TerminateActionUsage", targetEntity = TerminateActionUsageImpl.class), 
                @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class), 
                @MetaValue(value = "TriggerInvocationExpression", targetEntity = TriggerInvocationExpressionImpl.class), 
                @MetaValue(value = "Usage", targetEntity = UsageImpl.class), 
                @MetaValue(value = "UseCaseUsage", targetEntity = UseCaseUsageImpl.class), 
                @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class), 
                @MetaValue(value = "ViewUsage", targetEntity = ViewUsageImpl.class), 
                @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class), 
                @MetaValue(value = "WhileLoopActionUsage", targetEntity = WhileLoopActionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "FeatureChainExpressionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "FeatureChainExpression", targetEntity = FeatureChainExpressionImpl.class), 
        }),
        @AnyMetaDef(name = "FeatureChainingMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "FeatureChaining", targetEntity = FeatureChainingImpl.class), 
        }),
        @AnyMetaDef(name = "FeatureInvertingMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "FeatureInverting", targetEntity = FeatureInvertingImpl.class), 
        }),
        @AnyMetaDef(name = "FeatureMembershipMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ActorMembership", targetEntity = ActorMembershipImpl.class), 
                @MetaValue(value = "EndFeatureMembership", targetEntity = EndFeatureMembershipImpl.class), 
                @MetaValue(value = "FeatureMembership", targetEntity = FeatureMembershipImpl.class), 
                @MetaValue(value = "FramedConcernMembership", targetEntity = FramedConcernMembershipImpl.class), 
                @MetaValue(value = "ObjectiveMembership", targetEntity = ObjectiveMembershipImpl.class), 
                @MetaValue(value = "ParameterMembership", targetEntity = ParameterMembershipImpl.class), 
                @MetaValue(value = "RequirementConstraintMembership", targetEntity = RequirementConstraintMembershipImpl.class), 
                @MetaValue(value = "RequirementVerificationMembership", targetEntity = RequirementVerificationMembershipImpl.class), 
                @MetaValue(value = "ResultExpressionMembership", targetEntity = ResultExpressionMembershipImpl.class), 
                @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class), 
                @MetaValue(value = "StakeholderMembership", targetEntity = StakeholderMembershipImpl.class), 
                @MetaValue(value = "StateSubactionMembership", targetEntity = StateSubactionMembershipImpl.class), 
                @MetaValue(value = "SubjectMembership", targetEntity = SubjectMembershipImpl.class), 
                @MetaValue(value = "TransitionFeatureMembership", targetEntity = TransitionFeatureMembershipImpl.class), 
                @MetaValue(value = "ViewRenderingMembership", targetEntity = ViewRenderingMembershipImpl.class), 
        }),
        @AnyMetaDef(name = "FeatureReferenceExpressionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class), 
        }),
        @AnyMetaDef(name = "FeatureTypingMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ConjugatedPortTyping", targetEntity = ConjugatedPortTypingImpl.class), 
                @MetaValue(value = "FeatureTyping", targetEntity = FeatureTypingImpl.class), 
        }),
        @AnyMetaDef(name = "FeatureValueMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "FeatureValue", targetEntity = FeatureValueImpl.class), 
        }),
        @AnyMetaDef(name = "FeaturingMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ActorMembership", targetEntity = ActorMembershipImpl.class), 
                @MetaValue(value = "EndFeatureMembership", targetEntity = EndFeatureMembershipImpl.class), 
                @MetaValue(value = "FeatureMembership", targetEntity = FeatureMembershipImpl.class), 
                @MetaValue(value = "Featuring", targetEntity = FeaturingImpl.class), 
                @MetaValue(value = "FramedConcernMembership", targetEntity = FramedConcernMembershipImpl.class), 
                @MetaValue(value = "ObjectiveMembership", targetEntity = ObjectiveMembershipImpl.class), 
                @MetaValue(value = "ParameterMembership", targetEntity = ParameterMembershipImpl.class), 
                @MetaValue(value = "RequirementConstraintMembership", targetEntity = RequirementConstraintMembershipImpl.class), 
                @MetaValue(value = "RequirementVerificationMembership", targetEntity = RequirementVerificationMembershipImpl.class), 
                @MetaValue(value = "ResultExpressionMembership", targetEntity = ResultExpressionMembershipImpl.class), 
                @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class), 
                @MetaValue(value = "StakeholderMembership", targetEntity = StakeholderMembershipImpl.class), 
                @MetaValue(value = "StateSubactionMembership", targetEntity = StateSubactionMembershipImpl.class), 
                @MetaValue(value = "SubjectMembership", targetEntity = SubjectMembershipImpl.class), 
                @MetaValue(value = "TransitionFeatureMembership", targetEntity = TransitionFeatureMembershipImpl.class), 
                @MetaValue(value = "TypeFeaturing", targetEntity = TypeFeaturingImpl.class), 
                @MetaValue(value = "ViewRenderingMembership", targetEntity = ViewRenderingMembershipImpl.class), 
        }),
        @AnyMetaDef(name = "FlowConnectionDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "FlowConnectionDefinition", targetEntity = FlowConnectionDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "FlowConnectionUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "FlowConnectionUsage", targetEntity = FlowConnectionUsageImpl.class), 
                @MetaValue(value = "SuccessionFlowConnectionUsage", targetEntity = SuccessionFlowConnectionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "ForLoopActionUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ForLoopActionUsage", targetEntity = ForLoopActionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "ForkNodeMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class), 
        }),
        @AnyMetaDef(name = "FramedConcernMembershipMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "FramedConcernMembership", targetEntity = FramedConcernMembershipImpl.class), 
        }),
        @AnyMetaDef(name = "FunctionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class), 
                @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class), 
                @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class), 
                @MetaValue(value = "ConcernDefinition", targetEntity = ConcernDefinitionImpl.class), 
                @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class), 
                @MetaValue(value = "Function", targetEntity = FunctionImpl.class), 
                @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class), 
                @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class), 
                @MetaValue(value = "UseCaseDefinition", targetEntity = UseCaseDefinitionImpl.class), 
                @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class), 
                @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "IfActionUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "IfActionUsage", targetEntity = IfActionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "ImportMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "Expose", targetEntity = ExposeImpl.class), 
                @MetaValue(value = "Import", targetEntity = ImportImpl.class), 
                @MetaValue(value = "MembershipExpose", targetEntity = MembershipExposeImpl.class), 
                @MetaValue(value = "MembershipImport", targetEntity = MembershipImportImpl.class), 
                @MetaValue(value = "NamespaceExpose", targetEntity = NamespaceExposeImpl.class), 
                @MetaValue(value = "NamespaceImport", targetEntity = NamespaceImportImpl.class), 
        }),
        @AnyMetaDef(name = "IncludeUseCaseUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "IncludeUseCaseUsage", targetEntity = IncludeUseCaseUsageImpl.class), 
        }),
        @AnyMetaDef(name = "InteractionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "FlowConnectionDefinition", targetEntity = FlowConnectionDefinitionImpl.class), 
                @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class), 
        }),
        @AnyMetaDef(name = "InterfaceDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "InterfaceUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class), 
        }),
        @AnyMetaDef(name = "IntersectingMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "Intersecting", targetEntity = IntersectingImpl.class), 
        }),
        @AnyMetaDef(name = "InvariantMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class), 
                @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class), 
                @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class), 
        }),
        @AnyMetaDef(name = "InvocationExpressionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "CollectExpression", targetEntity = CollectExpressionImpl.class), 
                @MetaValue(value = "FeatureChainExpression", targetEntity = FeatureChainExpressionImpl.class), 
                @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class), 
                @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class), 
                @MetaValue(value = "SelectExpression", targetEntity = SelectExpressionImpl.class), 
                @MetaValue(value = "TriggerInvocationExpression", targetEntity = TriggerInvocationExpressionImpl.class), 
        }),
        @AnyMetaDef(name = "ItemDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class), 
                @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class), 
                @MetaValue(value = "FlowConnectionDefinition", targetEntity = FlowConnectionDefinitionImpl.class), 
                @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class), 
                @MetaValue(value = "ItemDefinition", targetEntity = ItemDefinitionImpl.class), 
                @MetaValue(value = "MetadataDefinition", targetEntity = MetadataDefinitionImpl.class), 
                @MetaValue(value = "PartDefinition", targetEntity = PartDefinitionImpl.class), 
                @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class), 
                @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "ItemFeatureMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ItemFeature", targetEntity = ItemFeatureImpl.class), 
        }),
        @AnyMetaDef(name = "ItemFlowMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "FlowConnectionUsage", targetEntity = FlowConnectionUsageImpl.class), 
                @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class), 
                @MetaValue(value = "SuccessionFlowConnectionUsage", targetEntity = SuccessionFlowConnectionUsageImpl.class), 
                @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class), 
        }),
        @AnyMetaDef(name = "ItemFlowEndMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ItemFlowEnd", targetEntity = ItemFlowEndImpl.class), 
        }),
        @AnyMetaDef(name = "ItemUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class), 
                @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class), 
                @MetaValue(value = "FlowConnectionUsage", targetEntity = FlowConnectionUsageImpl.class), 
                @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class), 
                @MetaValue(value = "ItemUsage", targetEntity = ItemUsageImpl.class), 
                @MetaValue(value = "MetadataUsage", targetEntity = MetadataUsageImpl.class), 
                @MetaValue(value = "PartUsage", targetEntity = PartUsageImpl.class), 
                @MetaValue(value = "RenderingUsage", targetEntity = RenderingUsageImpl.class), 
                @MetaValue(value = "SuccessionFlowConnectionUsage", targetEntity = SuccessionFlowConnectionUsageImpl.class), 
                @MetaValue(value = "ViewUsage", targetEntity = ViewUsageImpl.class), 
        }),
        @AnyMetaDef(name = "JoinNodeMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class), 
        }),
        @AnyMetaDef(name = "LibraryPackageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "LibraryPackage", targetEntity = LibraryPackageImpl.class), 
        }),
        @AnyMetaDef(name = "LifeClassMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class), 
        }),
        @AnyMetaDef(name = "LiteralBooleanMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class), 
        }),
        @AnyMetaDef(name = "LiteralExpressionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class), 
                @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class), 
                @MetaValue(value = "LiteralInfinity", targetEntity = LiteralInfinityImpl.class), 
                @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class), 
                @MetaValue(value = "LiteralRational", targetEntity = LiteralRationalImpl.class), 
                @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class), 
        }),
        @AnyMetaDef(name = "LiteralInfinityMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "LiteralInfinity", targetEntity = LiteralInfinityImpl.class), 
        }),
        @AnyMetaDef(name = "LiteralIntegerMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class), 
        }),
        @AnyMetaDef(name = "LiteralRationalMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "LiteralRational", targetEntity = LiteralRationalImpl.class), 
        }),
        @AnyMetaDef(name = "LiteralStringMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class), 
        }),
        @AnyMetaDef(name = "LoopActionUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ForLoopActionUsage", targetEntity = ForLoopActionUsageImpl.class), 
                @MetaValue(value = "LoopActionUsage", targetEntity = LoopActionUsageImpl.class), 
                @MetaValue(value = "WhileLoopActionUsage", targetEntity = WhileLoopActionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "MembershipMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ActorMembership", targetEntity = ActorMembershipImpl.class), 
                @MetaValue(value = "ElementFilterMembership", targetEntity = ElementFilterMembershipImpl.class), 
                @MetaValue(value = "EndFeatureMembership", targetEntity = EndFeatureMembershipImpl.class), 
                @MetaValue(value = "FeatureMembership", targetEntity = FeatureMembershipImpl.class), 
                @MetaValue(value = "FeatureValue", targetEntity = FeatureValueImpl.class), 
                @MetaValue(value = "FramedConcernMembership", targetEntity = FramedConcernMembershipImpl.class), 
                @MetaValue(value = "Membership", targetEntity = MembershipImpl.class), 
                @MetaValue(value = "ObjectiveMembership", targetEntity = ObjectiveMembershipImpl.class), 
                @MetaValue(value = "OwningMembership", targetEntity = OwningMembershipImpl.class), 
                @MetaValue(value = "ParameterMembership", targetEntity = ParameterMembershipImpl.class), 
                @MetaValue(value = "RequirementConstraintMembership", targetEntity = RequirementConstraintMembershipImpl.class), 
                @MetaValue(value = "RequirementVerificationMembership", targetEntity = RequirementVerificationMembershipImpl.class), 
                @MetaValue(value = "ResultExpressionMembership", targetEntity = ResultExpressionMembershipImpl.class), 
                @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class), 
                @MetaValue(value = "StakeholderMembership", targetEntity = StakeholderMembershipImpl.class), 
                @MetaValue(value = "StateSubactionMembership", targetEntity = StateSubactionMembershipImpl.class), 
                @MetaValue(value = "SubjectMembership", targetEntity = SubjectMembershipImpl.class), 
                @MetaValue(value = "TransitionFeatureMembership", targetEntity = TransitionFeatureMembershipImpl.class), 
                @MetaValue(value = "VariantMembership", targetEntity = VariantMembershipImpl.class), 
                @MetaValue(value = "ViewRenderingMembership", targetEntity = ViewRenderingMembershipImpl.class), 
        }),
        @AnyMetaDef(name = "MembershipExposeMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "MembershipExpose", targetEntity = MembershipExposeImpl.class), 
        }),
        @AnyMetaDef(name = "MembershipImportMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "MembershipExpose", targetEntity = MembershipExposeImpl.class), 
                @MetaValue(value = "MembershipImport", targetEntity = MembershipImportImpl.class), 
        }),
        @AnyMetaDef(name = "MergeNodeMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class), 
        }),
        @AnyMetaDef(name = "MetaclassMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "Metaclass", targetEntity = MetaclassImpl.class), 
                @MetaValue(value = "MetadataDefinition", targetEntity = MetadataDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "MetadataAccessExpressionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "MetadataAccessExpression", targetEntity = MetadataAccessExpressionImpl.class), 
        }),
        @AnyMetaDef(name = "MetadataDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "MetadataDefinition", targetEntity = MetadataDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "MetadataFeatureMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "MetadataFeature", targetEntity = MetadataFeatureImpl.class), 
                @MetaValue(value = "MetadataUsage", targetEntity = MetadataUsageImpl.class), 
        }),
        @AnyMetaDef(name = "MetadataUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "MetadataUsage", targetEntity = MetadataUsageImpl.class), 
        }),
        @AnyMetaDef(name = "MultiplicityMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "Multiplicity", targetEntity = MultiplicityImpl.class), 
                @MetaValue(value = "MultiplicityRange", targetEntity = MultiplicityRangeImpl.class), 
        }),
        @AnyMetaDef(name = "MultiplicityRangeMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "MultiplicityRange", targetEntity = MultiplicityRangeImpl.class), 
        }),
        @AnyMetaDef(name = "NamespaceMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class), 
                @MetaValue(value = "ActionDefinition", targetEntity = ActionDefinitionImpl.class), 
                @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class), 
                @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class), 
                @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class), 
                @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class), 
                @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class), 
                @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class), 
                @MetaValue(value = "AssignmentActionUsage", targetEntity = AssignmentActionUsageImpl.class), 
                @MetaValue(value = "Association", targetEntity = AssociationImpl.class), 
                @MetaValue(value = "AssociationStructure", targetEntity = AssociationStructureImpl.class), 
                @MetaValue(value = "AttributeDefinition", targetEntity = AttributeDefinitionImpl.class), 
                @MetaValue(value = "AttributeUsage", targetEntity = AttributeUsageImpl.class), 
                @MetaValue(value = "Behavior", targetEntity = BehaviorImpl.class), 
                @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class), 
                @MetaValue(value = "BindingConnectorAsUsage", targetEntity = BindingConnectorAsUsageImpl.class), 
                @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class), 
                @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class), 
                @MetaValue(value = "CalculationUsage", targetEntity = CalculationUsageImpl.class), 
                @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class), 
                @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class), 
                @MetaValue(value = "Class", targetEntity = ClassImpl.class), 
                @MetaValue(value = "Classifier", targetEntity = ClassifierImpl.class), 
                @MetaValue(value = "CollectExpression", targetEntity = CollectExpressionImpl.class), 
                @MetaValue(value = "ConcernDefinition", targetEntity = ConcernDefinitionImpl.class), 
                @MetaValue(value = "ConcernUsage", targetEntity = ConcernUsageImpl.class), 
                @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class), 
                @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class), 
                @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class), 
                @MetaValue(value = "Connector", targetEntity = ConnectorImpl.class), 
                @MetaValue(value = "ConnectorAsUsage", targetEntity = ConnectorAsUsageImpl.class), 
                @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class), 
                @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class), 
                @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class), 
                @MetaValue(value = "DataType", targetEntity = DataTypeImpl.class), 
                @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class), 
                @MetaValue(value = "Definition", targetEntity = DefinitionImpl.class), 
                @MetaValue(value = "EnumerationDefinition", targetEntity = EnumerationDefinitionImpl.class), 
                @MetaValue(value = "EnumerationUsage", targetEntity = EnumerationUsageImpl.class), 
                @MetaValue(value = "EventOccurrenceUsage", targetEntity = EventOccurrenceUsageImpl.class), 
                @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class), 
                @MetaValue(value = "Expression", targetEntity = ExpressionImpl.class), 
                @MetaValue(value = "Feature", targetEntity = FeatureImpl.class), 
                @MetaValue(value = "FeatureChainExpression", targetEntity = FeatureChainExpressionImpl.class), 
                @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class), 
                @MetaValue(value = "FlowConnectionDefinition", targetEntity = FlowConnectionDefinitionImpl.class), 
                @MetaValue(value = "FlowConnectionUsage", targetEntity = FlowConnectionUsageImpl.class), 
                @MetaValue(value = "ForLoopActionUsage", targetEntity = ForLoopActionUsageImpl.class), 
                @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class), 
                @MetaValue(value = "Function", targetEntity = FunctionImpl.class), 
                @MetaValue(value = "IfActionUsage", targetEntity = IfActionUsageImpl.class), 
                @MetaValue(value = "IncludeUseCaseUsage", targetEntity = IncludeUseCaseUsageImpl.class), 
                @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class), 
                @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class), 
                @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class), 
                @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class), 
                @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class), 
                @MetaValue(value = "ItemDefinition", targetEntity = ItemDefinitionImpl.class), 
                @MetaValue(value = "ItemFeature", targetEntity = ItemFeatureImpl.class), 
                @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class), 
                @MetaValue(value = "ItemFlowEnd", targetEntity = ItemFlowEndImpl.class), 
                @MetaValue(value = "ItemUsage", targetEntity = ItemUsageImpl.class), 
                @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class), 
                @MetaValue(value = "LibraryPackage", targetEntity = LibraryPackageImpl.class), 
                @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class), 
                @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class), 
                @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class), 
                @MetaValue(value = "LiteralInfinity", targetEntity = LiteralInfinityImpl.class), 
                @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class), 
                @MetaValue(value = "LiteralRational", targetEntity = LiteralRationalImpl.class), 
                @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class), 
                @MetaValue(value = "LoopActionUsage", targetEntity = LoopActionUsageImpl.class), 
                @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class), 
                @MetaValue(value = "Metaclass", targetEntity = MetaclassImpl.class), 
                @MetaValue(value = "MetadataAccessExpression", targetEntity = MetadataAccessExpressionImpl.class), 
                @MetaValue(value = "MetadataDefinition", targetEntity = MetadataDefinitionImpl.class), 
                @MetaValue(value = "MetadataFeature", targetEntity = MetadataFeatureImpl.class), 
                @MetaValue(value = "MetadataUsage", targetEntity = MetadataUsageImpl.class), 
                @MetaValue(value = "Multiplicity", targetEntity = MultiplicityImpl.class), 
                @MetaValue(value = "MultiplicityRange", targetEntity = MultiplicityRangeImpl.class), 
                @MetaValue(value = "Namespace", targetEntity = NamespaceImpl.class), 
                @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class), 
                @MetaValue(value = "OccurrenceDefinition", targetEntity = OccurrenceDefinitionImpl.class), 
                @MetaValue(value = "OccurrenceUsage", targetEntity = OccurrenceUsageImpl.class), 
                @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class), 
                @MetaValue(value = "Package", targetEntity = PackageImpl.class), 
                @MetaValue(value = "PartDefinition", targetEntity = PartDefinitionImpl.class), 
                @MetaValue(value = "PartUsage", targetEntity = PartUsageImpl.class), 
                @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class), 
                @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class), 
                @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class), 
                @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class), 
                @MetaValue(value = "ReferenceUsage", targetEntity = ReferenceUsageImpl.class), 
                @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class), 
                @MetaValue(value = "RenderingUsage", targetEntity = RenderingUsageImpl.class), 
                @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class), 
                @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class), 
                @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class), 
                @MetaValue(value = "SelectExpression", targetEntity = SelectExpressionImpl.class), 
                @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class), 
                @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class), 
                @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class), 
                @MetaValue(value = "Step", targetEntity = StepImpl.class), 
                @MetaValue(value = "Structure", targetEntity = StructureImpl.class), 
                @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class), 
                @MetaValue(value = "SuccessionAsUsage", targetEntity = SuccessionAsUsageImpl.class), 
                @MetaValue(value = "SuccessionFlowConnectionUsage", targetEntity = SuccessionFlowConnectionUsageImpl.class), 
                @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class), 
                @MetaValue(value = "TerminateActionUsage", targetEntity = TerminateActionUsageImpl.class), 
                @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class), 
                @MetaValue(value = "TriggerInvocationExpression", targetEntity = TriggerInvocationExpressionImpl.class), 
                @MetaValue(value = "Type", targetEntity = TypeImpl.class), 
                @MetaValue(value = "Usage", targetEntity = UsageImpl.class), 
                @MetaValue(value = "UseCaseDefinition", targetEntity = UseCaseDefinitionImpl.class), 
                @MetaValue(value = "UseCaseUsage", targetEntity = UseCaseUsageImpl.class), 
                @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class), 
                @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class), 
                @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class), 
                @MetaValue(value = "ViewUsage", targetEntity = ViewUsageImpl.class), 
                @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class), 
                @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class), 
                @MetaValue(value = "WhileLoopActionUsage", targetEntity = WhileLoopActionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "NamespaceExposeMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "NamespaceExpose", targetEntity = NamespaceExposeImpl.class), 
        }),
        @AnyMetaDef(name = "NamespaceImportMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "NamespaceExpose", targetEntity = NamespaceExposeImpl.class), 
                @MetaValue(value = "NamespaceImport", targetEntity = NamespaceImportImpl.class), 
        }),
        @AnyMetaDef(name = "NullExpressionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class), 
        }),
        @AnyMetaDef(name = "ObjectiveMembershipMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ObjectiveMembership", targetEntity = ObjectiveMembershipImpl.class), 
        }),
        @AnyMetaDef(name = "OccurrenceDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ActionDefinition", targetEntity = ActionDefinitionImpl.class), 
                @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class), 
                @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class), 
                @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class), 
                @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class), 
                @MetaValue(value = "ConcernDefinition", targetEntity = ConcernDefinitionImpl.class), 
                @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class), 
                @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class), 
                @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class), 
                @MetaValue(value = "FlowConnectionDefinition", targetEntity = FlowConnectionDefinitionImpl.class), 
                @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class), 
                @MetaValue(value = "ItemDefinition", targetEntity = ItemDefinitionImpl.class), 
                @MetaValue(value = "MetadataDefinition", targetEntity = MetadataDefinitionImpl.class), 
                @MetaValue(value = "OccurrenceDefinition", targetEntity = OccurrenceDefinitionImpl.class), 
                @MetaValue(value = "PartDefinition", targetEntity = PartDefinitionImpl.class), 
                @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class), 
                @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class), 
                @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class), 
                @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class), 
                @MetaValue(value = "UseCaseDefinition", targetEntity = UseCaseDefinitionImpl.class), 
                @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class), 
                @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class), 
                @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "OccurrenceUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class), 
                @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class), 
                @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class), 
                @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class), 
                @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class), 
                @MetaValue(value = "AssignmentActionUsage", targetEntity = AssignmentActionUsageImpl.class), 
                @MetaValue(value = "CalculationUsage", targetEntity = CalculationUsageImpl.class), 
                @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class), 
                @MetaValue(value = "ConcernUsage", targetEntity = ConcernUsageImpl.class), 
                @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class), 
                @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class), 
                @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class), 
                @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class), 
                @MetaValue(value = "EventOccurrenceUsage", targetEntity = EventOccurrenceUsageImpl.class), 
                @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class), 
                @MetaValue(value = "FlowConnectionUsage", targetEntity = FlowConnectionUsageImpl.class), 
                @MetaValue(value = "ForLoopActionUsage", targetEntity = ForLoopActionUsageImpl.class), 
                @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class), 
                @MetaValue(value = "IfActionUsage", targetEntity = IfActionUsageImpl.class), 
                @MetaValue(value = "IncludeUseCaseUsage", targetEntity = IncludeUseCaseUsageImpl.class), 
                @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class), 
                @MetaValue(value = "ItemUsage", targetEntity = ItemUsageImpl.class), 
                @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class), 
                @MetaValue(value = "LoopActionUsage", targetEntity = LoopActionUsageImpl.class), 
                @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class), 
                @MetaValue(value = "MetadataUsage", targetEntity = MetadataUsageImpl.class), 
                @MetaValue(value = "OccurrenceUsage", targetEntity = OccurrenceUsageImpl.class), 
                @MetaValue(value = "PartUsage", targetEntity = PartUsageImpl.class), 
                @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class), 
                @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class), 
                @MetaValue(value = "RenderingUsage", targetEntity = RenderingUsageImpl.class), 
                @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class), 
                @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class), 
                @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class), 
                @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class), 
                @MetaValue(value = "SuccessionFlowConnectionUsage", targetEntity = SuccessionFlowConnectionUsageImpl.class), 
                @MetaValue(value = "TerminateActionUsage", targetEntity = TerminateActionUsageImpl.class), 
                @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class), 
                @MetaValue(value = "UseCaseUsage", targetEntity = UseCaseUsageImpl.class), 
                @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class), 
                @MetaValue(value = "ViewUsage", targetEntity = ViewUsageImpl.class), 
                @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class), 
                @MetaValue(value = "WhileLoopActionUsage", targetEntity = WhileLoopActionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "OperatorExpressionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "CollectExpression", targetEntity = CollectExpressionImpl.class), 
                @MetaValue(value = "FeatureChainExpression", targetEntity = FeatureChainExpressionImpl.class), 
                @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class), 
                @MetaValue(value = "SelectExpression", targetEntity = SelectExpressionImpl.class), 
        }),
        @AnyMetaDef(name = "OwningMembershipMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ActorMembership", targetEntity = ActorMembershipImpl.class), 
                @MetaValue(value = "ElementFilterMembership", targetEntity = ElementFilterMembershipImpl.class), 
                @MetaValue(value = "EndFeatureMembership", targetEntity = EndFeatureMembershipImpl.class), 
                @MetaValue(value = "FeatureMembership", targetEntity = FeatureMembershipImpl.class), 
                @MetaValue(value = "FeatureValue", targetEntity = FeatureValueImpl.class), 
                @MetaValue(value = "FramedConcernMembership", targetEntity = FramedConcernMembershipImpl.class), 
                @MetaValue(value = "ObjectiveMembership", targetEntity = ObjectiveMembershipImpl.class), 
                @MetaValue(value = "OwningMembership", targetEntity = OwningMembershipImpl.class), 
                @MetaValue(value = "ParameterMembership", targetEntity = ParameterMembershipImpl.class), 
                @MetaValue(value = "RequirementConstraintMembership", targetEntity = RequirementConstraintMembershipImpl.class), 
                @MetaValue(value = "RequirementVerificationMembership", targetEntity = RequirementVerificationMembershipImpl.class), 
                @MetaValue(value = "ResultExpressionMembership", targetEntity = ResultExpressionMembershipImpl.class), 
                @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class), 
                @MetaValue(value = "StakeholderMembership", targetEntity = StakeholderMembershipImpl.class), 
                @MetaValue(value = "StateSubactionMembership", targetEntity = StateSubactionMembershipImpl.class), 
                @MetaValue(value = "SubjectMembership", targetEntity = SubjectMembershipImpl.class), 
                @MetaValue(value = "TransitionFeatureMembership", targetEntity = TransitionFeatureMembershipImpl.class), 
                @MetaValue(value = "VariantMembership", targetEntity = VariantMembershipImpl.class), 
                @MetaValue(value = "ViewRenderingMembership", targetEntity = ViewRenderingMembershipImpl.class), 
        }),
        @AnyMetaDef(name = "PackageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "LibraryPackage", targetEntity = LibraryPackageImpl.class), 
                @MetaValue(value = "Package", targetEntity = PackageImpl.class), 
        }),
        @AnyMetaDef(name = "ParameterMembershipMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ActorMembership", targetEntity = ActorMembershipImpl.class), 
                @MetaValue(value = "ParameterMembership", targetEntity = ParameterMembershipImpl.class), 
                @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class), 
                @MetaValue(value = "StakeholderMembership", targetEntity = StakeholderMembershipImpl.class), 
                @MetaValue(value = "SubjectMembership", targetEntity = SubjectMembershipImpl.class), 
        }),
        @AnyMetaDef(name = "PartDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class), 
                @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class), 
                @MetaValue(value = "FlowConnectionDefinition", targetEntity = FlowConnectionDefinitionImpl.class), 
                @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class), 
                @MetaValue(value = "PartDefinition", targetEntity = PartDefinitionImpl.class), 
                @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class), 
                @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "PartUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class), 
                @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class), 
                @MetaValue(value = "FlowConnectionUsage", targetEntity = FlowConnectionUsageImpl.class), 
                @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class), 
                @MetaValue(value = "PartUsage", targetEntity = PartUsageImpl.class), 
                @MetaValue(value = "RenderingUsage", targetEntity = RenderingUsageImpl.class), 
                @MetaValue(value = "SuccessionFlowConnectionUsage", targetEntity = SuccessionFlowConnectionUsageImpl.class), 
                @MetaValue(value = "ViewUsage", targetEntity = ViewUsageImpl.class), 
        }),
        @AnyMetaDef(name = "PerformActionUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class), 
                @MetaValue(value = "IncludeUseCaseUsage", targetEntity = IncludeUseCaseUsageImpl.class), 
                @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "PortConjugationMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "PortConjugation", targetEntity = PortConjugationImpl.class), 
        }),
        @AnyMetaDef(name = "PortDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class), 
                @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "PortUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class), 
        }),
        @AnyMetaDef(name = "PredicateMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ConcernDefinition", targetEntity = ConcernDefinitionImpl.class), 
                @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class), 
                @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class), 
                @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class), 
                @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "RedefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "Redefinition", targetEntity = RedefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "ReferenceSubsettingMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ReferenceSubsetting", targetEntity = ReferenceSubsettingImpl.class), 
        }),
        @AnyMetaDef(name = "ReferenceUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ReferenceUsage", targetEntity = ReferenceUsageImpl.class), 
        }),
        @AnyMetaDef(name = "RelationshipMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ActorMembership", targetEntity = ActorMembershipImpl.class), 
                @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class), 
                @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class), 
                @MetaValue(value = "Annotation", targetEntity = AnnotationImpl.class), 
                @MetaValue(value = "Association", targetEntity = AssociationImpl.class), 
                @MetaValue(value = "AssociationStructure", targetEntity = AssociationStructureImpl.class), 
                @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class), 
                @MetaValue(value = "BindingConnectorAsUsage", targetEntity = BindingConnectorAsUsageImpl.class), 
                @MetaValue(value = "ConjugatedPortTyping", targetEntity = ConjugatedPortTypingImpl.class), 
                @MetaValue(value = "Conjugation", targetEntity = ConjugationImpl.class), 
                @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class), 
                @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class), 
                @MetaValue(value = "Connector", targetEntity = ConnectorImpl.class), 
                @MetaValue(value = "ConnectorAsUsage", targetEntity = ConnectorAsUsageImpl.class), 
                @MetaValue(value = "Dependency", targetEntity = DependencyImpl.class), 
                @MetaValue(value = "Differencing", targetEntity = DifferencingImpl.class), 
                @MetaValue(value = "Disjoining", targetEntity = DisjoiningImpl.class), 
                @MetaValue(value = "ElementFilterMembership", targetEntity = ElementFilterMembershipImpl.class), 
                @MetaValue(value = "EndFeatureMembership", targetEntity = EndFeatureMembershipImpl.class), 
                @MetaValue(value = "Expose", targetEntity = ExposeImpl.class), 
                @MetaValue(value = "FeatureChaining", targetEntity = FeatureChainingImpl.class), 
                @MetaValue(value = "FeatureInverting", targetEntity = FeatureInvertingImpl.class), 
                @MetaValue(value = "FeatureMembership", targetEntity = FeatureMembershipImpl.class), 
                @MetaValue(value = "FeatureTyping", targetEntity = FeatureTypingImpl.class), 
                @MetaValue(value = "FeatureValue", targetEntity = FeatureValueImpl.class), 
                @MetaValue(value = "Featuring", targetEntity = FeaturingImpl.class), 
                @MetaValue(value = "FlowConnectionDefinition", targetEntity = FlowConnectionDefinitionImpl.class), 
                @MetaValue(value = "FlowConnectionUsage", targetEntity = FlowConnectionUsageImpl.class), 
                @MetaValue(value = "FramedConcernMembership", targetEntity = FramedConcernMembershipImpl.class), 
                @MetaValue(value = "Import", targetEntity = ImportImpl.class), 
                @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class), 
                @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class), 
                @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class), 
                @MetaValue(value = "Intersecting", targetEntity = IntersectingImpl.class), 
                @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class), 
                @MetaValue(value = "Membership", targetEntity = MembershipImpl.class), 
                @MetaValue(value = "MembershipExpose", targetEntity = MembershipExposeImpl.class), 
                @MetaValue(value = "MembershipImport", targetEntity = MembershipImportImpl.class), 
                @MetaValue(value = "NamespaceExpose", targetEntity = NamespaceExposeImpl.class), 
                @MetaValue(value = "NamespaceImport", targetEntity = NamespaceImportImpl.class), 
                @MetaValue(value = "ObjectiveMembership", targetEntity = ObjectiveMembershipImpl.class), 
                @MetaValue(value = "OwningMembership", targetEntity = OwningMembershipImpl.class), 
                @MetaValue(value = "ParameterMembership", targetEntity = ParameterMembershipImpl.class), 
                @MetaValue(value = "PortConjugation", targetEntity = PortConjugationImpl.class), 
                @MetaValue(value = "Redefinition", targetEntity = RedefinitionImpl.class), 
                @MetaValue(value = "ReferenceSubsetting", targetEntity = ReferenceSubsettingImpl.class), 
                @MetaValue(value = "Relationship", targetEntity = RelationshipImpl.class), 
                @MetaValue(value = "RequirementConstraintMembership", targetEntity = RequirementConstraintMembershipImpl.class), 
                @MetaValue(value = "RequirementVerificationMembership", targetEntity = RequirementVerificationMembershipImpl.class), 
                @MetaValue(value = "ResultExpressionMembership", targetEntity = ResultExpressionMembershipImpl.class), 
                @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class), 
                @MetaValue(value = "Specialization", targetEntity = SpecializationImpl.class), 
                @MetaValue(value = "StakeholderMembership", targetEntity = StakeholderMembershipImpl.class), 
                @MetaValue(value = "StateSubactionMembership", targetEntity = StateSubactionMembershipImpl.class), 
                @MetaValue(value = "Subclassification", targetEntity = SubclassificationImpl.class), 
                @MetaValue(value = "SubjectMembership", targetEntity = SubjectMembershipImpl.class), 
                @MetaValue(value = "Subsetting", targetEntity = SubsettingImpl.class), 
                @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class), 
                @MetaValue(value = "SuccessionAsUsage", targetEntity = SuccessionAsUsageImpl.class), 
                @MetaValue(value = "SuccessionFlowConnectionUsage", targetEntity = SuccessionFlowConnectionUsageImpl.class), 
                @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class), 
                @MetaValue(value = "TransitionFeatureMembership", targetEntity = TransitionFeatureMembershipImpl.class), 
                @MetaValue(value = "TypeFeaturing", targetEntity = TypeFeaturingImpl.class), 
                @MetaValue(value = "Unioning", targetEntity = UnioningImpl.class), 
                @MetaValue(value = "VariantMembership", targetEntity = VariantMembershipImpl.class), 
                @MetaValue(value = "ViewRenderingMembership", targetEntity = ViewRenderingMembershipImpl.class), 
        }),
        @AnyMetaDef(name = "RenderingDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "RenderingUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "RenderingUsage", targetEntity = RenderingUsageImpl.class), 
        }),
        @AnyMetaDef(name = "RequirementConstraintMembershipMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "FramedConcernMembership", targetEntity = FramedConcernMembershipImpl.class), 
                @MetaValue(value = "RequirementConstraintMembership", targetEntity = RequirementConstraintMembershipImpl.class), 
                @MetaValue(value = "RequirementVerificationMembership", targetEntity = RequirementVerificationMembershipImpl.class), 
        }),
        @AnyMetaDef(name = "RequirementDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ConcernDefinition", targetEntity = ConcernDefinitionImpl.class), 
                @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class), 
                @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "RequirementUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ConcernUsage", targetEntity = ConcernUsageImpl.class), 
                @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class), 
                @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class), 
                @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class), 
        }),
        @AnyMetaDef(name = "RequirementVerificationMembershipMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "RequirementVerificationMembership", targetEntity = RequirementVerificationMembershipImpl.class), 
        }),
        @AnyMetaDef(name = "ResultExpressionMembershipMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ResultExpressionMembership", targetEntity = ResultExpressionMembershipImpl.class), 
        }),
        @AnyMetaDef(name = "ReturnParameterMembershipMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ReturnParameterMembership", targetEntity = ReturnParameterMembershipImpl.class), 
        }),
        @AnyMetaDef(name = "SatisfyRequirementUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class), 
        }),
        @AnyMetaDef(name = "SelectExpressionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "SelectExpression", targetEntity = SelectExpressionImpl.class), 
        }),
        @AnyMetaDef(name = "SendActionUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "SpecializationMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ConjugatedPortTyping", targetEntity = ConjugatedPortTypingImpl.class), 
                @MetaValue(value = "FeatureTyping", targetEntity = FeatureTypingImpl.class), 
                @MetaValue(value = "Redefinition", targetEntity = RedefinitionImpl.class), 
                @MetaValue(value = "ReferenceSubsetting", targetEntity = ReferenceSubsettingImpl.class), 
                @MetaValue(value = "Specialization", targetEntity = SpecializationImpl.class), 
                @MetaValue(value = "Subclassification", targetEntity = SubclassificationImpl.class), 
                @MetaValue(value = "Subsetting", targetEntity = SubsettingImpl.class), 
        }),
        @AnyMetaDef(name = "StakeholderMembershipMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "StakeholderMembership", targetEntity = StakeholderMembershipImpl.class), 
        }),
        @AnyMetaDef(name = "StateDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "StateSubactionMembershipMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "StateSubactionMembership", targetEntity = StateSubactionMembershipImpl.class), 
        }),
        @AnyMetaDef(name = "StateUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class), 
                @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class), 
        }),
        @AnyMetaDef(name = "StepMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class), 
                @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class), 
                @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class), 
                @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class), 
                @MetaValue(value = "AssignmentActionUsage", targetEntity = AssignmentActionUsageImpl.class), 
                @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class), 
                @MetaValue(value = "CalculationUsage", targetEntity = CalculationUsageImpl.class), 
                @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class), 
                @MetaValue(value = "CollectExpression", targetEntity = CollectExpressionImpl.class), 
                @MetaValue(value = "ConcernUsage", targetEntity = ConcernUsageImpl.class), 
                @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class), 
                @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class), 
                @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class), 
                @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class), 
                @MetaValue(value = "Expression", targetEntity = ExpressionImpl.class), 
                @MetaValue(value = "FeatureChainExpression", targetEntity = FeatureChainExpressionImpl.class), 
                @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class), 
                @MetaValue(value = "FlowConnectionUsage", targetEntity = FlowConnectionUsageImpl.class), 
                @MetaValue(value = "ForLoopActionUsage", targetEntity = ForLoopActionUsageImpl.class), 
                @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class), 
                @MetaValue(value = "IfActionUsage", targetEntity = IfActionUsageImpl.class), 
                @MetaValue(value = "IncludeUseCaseUsage", targetEntity = IncludeUseCaseUsageImpl.class), 
                @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class), 
                @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class), 
                @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class), 
                @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class), 
                @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class), 
                @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class), 
                @MetaValue(value = "LiteralInfinity", targetEntity = LiteralInfinityImpl.class), 
                @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class), 
                @MetaValue(value = "LiteralRational", targetEntity = LiteralRationalImpl.class), 
                @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class), 
                @MetaValue(value = "LoopActionUsage", targetEntity = LoopActionUsageImpl.class), 
                @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class), 
                @MetaValue(value = "MetadataAccessExpression", targetEntity = MetadataAccessExpressionImpl.class), 
                @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class), 
                @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class), 
                @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class), 
                @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class), 
                @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class), 
                @MetaValue(value = "SelectExpression", targetEntity = SelectExpressionImpl.class), 
                @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class), 
                @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class), 
                @MetaValue(value = "Step", targetEntity = StepImpl.class), 
                @MetaValue(value = "SuccessionFlowConnectionUsage", targetEntity = SuccessionFlowConnectionUsageImpl.class), 
                @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class), 
                @MetaValue(value = "TerminateActionUsage", targetEntity = TerminateActionUsageImpl.class), 
                @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class), 
                @MetaValue(value = "TriggerInvocationExpression", targetEntity = TriggerInvocationExpressionImpl.class), 
                @MetaValue(value = "UseCaseUsage", targetEntity = UseCaseUsageImpl.class), 
                @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class), 
                @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class), 
                @MetaValue(value = "WhileLoopActionUsage", targetEntity = WhileLoopActionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "StructureMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class), 
                @MetaValue(value = "AssociationStructure", targetEntity = AssociationStructureImpl.class), 
                @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class), 
                @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class), 
                @MetaValue(value = "FlowConnectionDefinition", targetEntity = FlowConnectionDefinitionImpl.class), 
                @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class), 
                @MetaValue(value = "ItemDefinition", targetEntity = ItemDefinitionImpl.class), 
                @MetaValue(value = "Metaclass", targetEntity = MetaclassImpl.class), 
                @MetaValue(value = "MetadataDefinition", targetEntity = MetadataDefinitionImpl.class), 
                @MetaValue(value = "PartDefinition", targetEntity = PartDefinitionImpl.class), 
                @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class), 
                @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class), 
                @MetaValue(value = "Structure", targetEntity = StructureImpl.class), 
                @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "SubclassificationMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "Subclassification", targetEntity = SubclassificationImpl.class), 
        }),
        @AnyMetaDef(name = "SubjectMembershipMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "SubjectMembership", targetEntity = SubjectMembershipImpl.class), 
        }),
        @AnyMetaDef(name = "SubsettingMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "Redefinition", targetEntity = RedefinitionImpl.class), 
                @MetaValue(value = "ReferenceSubsetting", targetEntity = ReferenceSubsettingImpl.class), 
                @MetaValue(value = "Subsetting", targetEntity = SubsettingImpl.class), 
        }),
        @AnyMetaDef(name = "SuccessionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class), 
                @MetaValue(value = "SuccessionAsUsage", targetEntity = SuccessionAsUsageImpl.class), 
                @MetaValue(value = "SuccessionFlowConnectionUsage", targetEntity = SuccessionFlowConnectionUsageImpl.class), 
                @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class), 
        }),
        @AnyMetaDef(name = "SuccessionAsUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "SuccessionAsUsage", targetEntity = SuccessionAsUsageImpl.class), 
        }),
        @AnyMetaDef(name = "SuccessionFlowConnectionUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "SuccessionFlowConnectionUsage", targetEntity = SuccessionFlowConnectionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "SuccessionItemFlowMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "SuccessionFlowConnectionUsage", targetEntity = SuccessionFlowConnectionUsageImpl.class), 
                @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class), 
        }),
        @AnyMetaDef(name = "TerminateActionUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "TerminateActionUsage", targetEntity = TerminateActionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "TextualRepresentationMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "TextualRepresentation", targetEntity = TextualRepresentationImpl.class), 
        }),
        @AnyMetaDef(name = "TransitionFeatureMembershipMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "TransitionFeatureMembership", targetEntity = TransitionFeatureMembershipImpl.class), 
        }),
        @AnyMetaDef(name = "TransitionUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "TriggerInvocationExpressionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "TriggerInvocationExpression", targetEntity = TriggerInvocationExpressionImpl.class), 
        }),
        @AnyMetaDef(name = "TypeMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class), 
                @MetaValue(value = "ActionDefinition", targetEntity = ActionDefinitionImpl.class), 
                @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class), 
                @MetaValue(value = "AllocationDefinition", targetEntity = AllocationDefinitionImpl.class), 
                @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class), 
                @MetaValue(value = "AnalysisCaseDefinition", targetEntity = AnalysisCaseDefinitionImpl.class), 
                @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class), 
                @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class), 
                @MetaValue(value = "AssignmentActionUsage", targetEntity = AssignmentActionUsageImpl.class), 
                @MetaValue(value = "Association", targetEntity = AssociationImpl.class), 
                @MetaValue(value = "AssociationStructure", targetEntity = AssociationStructureImpl.class), 
                @MetaValue(value = "AttributeDefinition", targetEntity = AttributeDefinitionImpl.class), 
                @MetaValue(value = "AttributeUsage", targetEntity = AttributeUsageImpl.class), 
                @MetaValue(value = "Behavior", targetEntity = BehaviorImpl.class), 
                @MetaValue(value = "BindingConnector", targetEntity = BindingConnectorImpl.class), 
                @MetaValue(value = "BindingConnectorAsUsage", targetEntity = BindingConnectorAsUsageImpl.class), 
                @MetaValue(value = "BooleanExpression", targetEntity = BooleanExpressionImpl.class), 
                @MetaValue(value = "CalculationDefinition", targetEntity = CalculationDefinitionImpl.class), 
                @MetaValue(value = "CalculationUsage", targetEntity = CalculationUsageImpl.class), 
                @MetaValue(value = "CaseDefinition", targetEntity = CaseDefinitionImpl.class), 
                @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class), 
                @MetaValue(value = "Class", targetEntity = ClassImpl.class), 
                @MetaValue(value = "Classifier", targetEntity = ClassifierImpl.class), 
                @MetaValue(value = "CollectExpression", targetEntity = CollectExpressionImpl.class), 
                @MetaValue(value = "ConcernDefinition", targetEntity = ConcernDefinitionImpl.class), 
                @MetaValue(value = "ConcernUsage", targetEntity = ConcernUsageImpl.class), 
                @MetaValue(value = "ConjugatedPortDefinition", targetEntity = ConjugatedPortDefinitionImpl.class), 
                @MetaValue(value = "ConnectionDefinition", targetEntity = ConnectionDefinitionImpl.class), 
                @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class), 
                @MetaValue(value = "Connector", targetEntity = ConnectorImpl.class), 
                @MetaValue(value = "ConnectorAsUsage", targetEntity = ConnectorAsUsageImpl.class), 
                @MetaValue(value = "ConstraintDefinition", targetEntity = ConstraintDefinitionImpl.class), 
                @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class), 
                @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class), 
                @MetaValue(value = "DataType", targetEntity = DataTypeImpl.class), 
                @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class), 
                @MetaValue(value = "Definition", targetEntity = DefinitionImpl.class), 
                @MetaValue(value = "EnumerationDefinition", targetEntity = EnumerationDefinitionImpl.class), 
                @MetaValue(value = "EnumerationUsage", targetEntity = EnumerationUsageImpl.class), 
                @MetaValue(value = "EventOccurrenceUsage", targetEntity = EventOccurrenceUsageImpl.class), 
                @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class), 
                @MetaValue(value = "Expression", targetEntity = ExpressionImpl.class), 
                @MetaValue(value = "Feature", targetEntity = FeatureImpl.class), 
                @MetaValue(value = "FeatureChainExpression", targetEntity = FeatureChainExpressionImpl.class), 
                @MetaValue(value = "FeatureReferenceExpression", targetEntity = FeatureReferenceExpressionImpl.class), 
                @MetaValue(value = "FlowConnectionDefinition", targetEntity = FlowConnectionDefinitionImpl.class), 
                @MetaValue(value = "FlowConnectionUsage", targetEntity = FlowConnectionUsageImpl.class), 
                @MetaValue(value = "ForLoopActionUsage", targetEntity = ForLoopActionUsageImpl.class), 
                @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class), 
                @MetaValue(value = "Function", targetEntity = FunctionImpl.class), 
                @MetaValue(value = "IfActionUsage", targetEntity = IfActionUsageImpl.class), 
                @MetaValue(value = "IncludeUseCaseUsage", targetEntity = IncludeUseCaseUsageImpl.class), 
                @MetaValue(value = "Interaction", targetEntity = InteractionImpl.class), 
                @MetaValue(value = "InterfaceDefinition", targetEntity = InterfaceDefinitionImpl.class), 
                @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class), 
                @MetaValue(value = "Invariant", targetEntity = InvariantImpl.class), 
                @MetaValue(value = "InvocationExpression", targetEntity = InvocationExpressionImpl.class), 
                @MetaValue(value = "ItemDefinition", targetEntity = ItemDefinitionImpl.class), 
                @MetaValue(value = "ItemFeature", targetEntity = ItemFeatureImpl.class), 
                @MetaValue(value = "ItemFlow", targetEntity = ItemFlowImpl.class), 
                @MetaValue(value = "ItemFlowEnd", targetEntity = ItemFlowEndImpl.class), 
                @MetaValue(value = "ItemUsage", targetEntity = ItemUsageImpl.class), 
                @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class), 
                @MetaValue(value = "LifeClass", targetEntity = LifeClassImpl.class), 
                @MetaValue(value = "LiteralBoolean", targetEntity = LiteralBooleanImpl.class), 
                @MetaValue(value = "LiteralExpression", targetEntity = LiteralExpressionImpl.class), 
                @MetaValue(value = "LiteralInfinity", targetEntity = LiteralInfinityImpl.class), 
                @MetaValue(value = "LiteralInteger", targetEntity = LiteralIntegerImpl.class), 
                @MetaValue(value = "LiteralRational", targetEntity = LiteralRationalImpl.class), 
                @MetaValue(value = "LiteralString", targetEntity = LiteralStringImpl.class), 
                @MetaValue(value = "LoopActionUsage", targetEntity = LoopActionUsageImpl.class), 
                @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class), 
                @MetaValue(value = "Metaclass", targetEntity = MetaclassImpl.class), 
                @MetaValue(value = "MetadataAccessExpression", targetEntity = MetadataAccessExpressionImpl.class), 
                @MetaValue(value = "MetadataDefinition", targetEntity = MetadataDefinitionImpl.class), 
                @MetaValue(value = "MetadataFeature", targetEntity = MetadataFeatureImpl.class), 
                @MetaValue(value = "MetadataUsage", targetEntity = MetadataUsageImpl.class), 
                @MetaValue(value = "Multiplicity", targetEntity = MultiplicityImpl.class), 
                @MetaValue(value = "MultiplicityRange", targetEntity = MultiplicityRangeImpl.class), 
                @MetaValue(value = "NullExpression", targetEntity = NullExpressionImpl.class), 
                @MetaValue(value = "OccurrenceDefinition", targetEntity = OccurrenceDefinitionImpl.class), 
                @MetaValue(value = "OccurrenceUsage", targetEntity = OccurrenceUsageImpl.class), 
                @MetaValue(value = "OperatorExpression", targetEntity = OperatorExpressionImpl.class), 
                @MetaValue(value = "PartDefinition", targetEntity = PartDefinitionImpl.class), 
                @MetaValue(value = "PartUsage", targetEntity = PartUsageImpl.class), 
                @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class), 
                @MetaValue(value = "PortDefinition", targetEntity = PortDefinitionImpl.class), 
                @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class), 
                @MetaValue(value = "Predicate", targetEntity = PredicateImpl.class), 
                @MetaValue(value = "ReferenceUsage", targetEntity = ReferenceUsageImpl.class), 
                @MetaValue(value = "RenderingDefinition", targetEntity = RenderingDefinitionImpl.class), 
                @MetaValue(value = "RenderingUsage", targetEntity = RenderingUsageImpl.class), 
                @MetaValue(value = "RequirementDefinition", targetEntity = RequirementDefinitionImpl.class), 
                @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class), 
                @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class), 
                @MetaValue(value = "SelectExpression", targetEntity = SelectExpressionImpl.class), 
                @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class), 
                @MetaValue(value = "StateDefinition", targetEntity = StateDefinitionImpl.class), 
                @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class), 
                @MetaValue(value = "Step", targetEntity = StepImpl.class), 
                @MetaValue(value = "Structure", targetEntity = StructureImpl.class), 
                @MetaValue(value = "Succession", targetEntity = SuccessionImpl.class), 
                @MetaValue(value = "SuccessionAsUsage", targetEntity = SuccessionAsUsageImpl.class), 
                @MetaValue(value = "SuccessionFlowConnectionUsage", targetEntity = SuccessionFlowConnectionUsageImpl.class), 
                @MetaValue(value = "SuccessionItemFlow", targetEntity = SuccessionItemFlowImpl.class), 
                @MetaValue(value = "TerminateActionUsage", targetEntity = TerminateActionUsageImpl.class), 
                @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class), 
                @MetaValue(value = "TriggerInvocationExpression", targetEntity = TriggerInvocationExpressionImpl.class), 
                @MetaValue(value = "Type", targetEntity = TypeImpl.class), 
                @MetaValue(value = "Usage", targetEntity = UsageImpl.class), 
                @MetaValue(value = "UseCaseDefinition", targetEntity = UseCaseDefinitionImpl.class), 
                @MetaValue(value = "UseCaseUsage", targetEntity = UseCaseUsageImpl.class), 
                @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class), 
                @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class), 
                @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class), 
                @MetaValue(value = "ViewUsage", targetEntity = ViewUsageImpl.class), 
                @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class), 
                @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class), 
                @MetaValue(value = "WhileLoopActionUsage", targetEntity = WhileLoopActionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "TypeFeaturingMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "TypeFeaturing", targetEntity = TypeFeaturingImpl.class), 
        }),
        @AnyMetaDef(name = "UnioningMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "Unioning", targetEntity = UnioningImpl.class), 
        }),
        @AnyMetaDef(name = "UsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "AcceptActionUsage", targetEntity = AcceptActionUsageImpl.class), 
                @MetaValue(value = "ActionUsage", targetEntity = ActionUsageImpl.class), 
                @MetaValue(value = "AllocationUsage", targetEntity = AllocationUsageImpl.class), 
                @MetaValue(value = "AnalysisCaseUsage", targetEntity = AnalysisCaseUsageImpl.class), 
                @MetaValue(value = "AssertConstraintUsage", targetEntity = AssertConstraintUsageImpl.class), 
                @MetaValue(value = "AssignmentActionUsage", targetEntity = AssignmentActionUsageImpl.class), 
                @MetaValue(value = "AttributeUsage", targetEntity = AttributeUsageImpl.class), 
                @MetaValue(value = "BindingConnectorAsUsage", targetEntity = BindingConnectorAsUsageImpl.class), 
                @MetaValue(value = "CalculationUsage", targetEntity = CalculationUsageImpl.class), 
                @MetaValue(value = "CaseUsage", targetEntity = CaseUsageImpl.class), 
                @MetaValue(value = "ConcernUsage", targetEntity = ConcernUsageImpl.class), 
                @MetaValue(value = "ConnectionUsage", targetEntity = ConnectionUsageImpl.class), 
                @MetaValue(value = "ConnectorAsUsage", targetEntity = ConnectorAsUsageImpl.class), 
                @MetaValue(value = "ConstraintUsage", targetEntity = ConstraintUsageImpl.class), 
                @MetaValue(value = "ControlNode", targetEntity = ControlNodeImpl.class), 
                @MetaValue(value = "DecisionNode", targetEntity = DecisionNodeImpl.class), 
                @MetaValue(value = "EnumerationUsage", targetEntity = EnumerationUsageImpl.class), 
                @MetaValue(value = "EventOccurrenceUsage", targetEntity = EventOccurrenceUsageImpl.class), 
                @MetaValue(value = "ExhibitStateUsage", targetEntity = ExhibitStateUsageImpl.class), 
                @MetaValue(value = "FlowConnectionUsage", targetEntity = FlowConnectionUsageImpl.class), 
                @MetaValue(value = "ForLoopActionUsage", targetEntity = ForLoopActionUsageImpl.class), 
                @MetaValue(value = "ForkNode", targetEntity = ForkNodeImpl.class), 
                @MetaValue(value = "IfActionUsage", targetEntity = IfActionUsageImpl.class), 
                @MetaValue(value = "IncludeUseCaseUsage", targetEntity = IncludeUseCaseUsageImpl.class), 
                @MetaValue(value = "InterfaceUsage", targetEntity = InterfaceUsageImpl.class), 
                @MetaValue(value = "ItemUsage", targetEntity = ItemUsageImpl.class), 
                @MetaValue(value = "JoinNode", targetEntity = JoinNodeImpl.class), 
                @MetaValue(value = "LoopActionUsage", targetEntity = LoopActionUsageImpl.class), 
                @MetaValue(value = "MergeNode", targetEntity = MergeNodeImpl.class), 
                @MetaValue(value = "MetadataUsage", targetEntity = MetadataUsageImpl.class), 
                @MetaValue(value = "OccurrenceUsage", targetEntity = OccurrenceUsageImpl.class), 
                @MetaValue(value = "PartUsage", targetEntity = PartUsageImpl.class), 
                @MetaValue(value = "PerformActionUsage", targetEntity = PerformActionUsageImpl.class), 
                @MetaValue(value = "PortUsage", targetEntity = PortUsageImpl.class), 
                @MetaValue(value = "ReferenceUsage", targetEntity = ReferenceUsageImpl.class), 
                @MetaValue(value = "RenderingUsage", targetEntity = RenderingUsageImpl.class), 
                @MetaValue(value = "RequirementUsage", targetEntity = RequirementUsageImpl.class), 
                @MetaValue(value = "SatisfyRequirementUsage", targetEntity = SatisfyRequirementUsageImpl.class), 
                @MetaValue(value = "SendActionUsage", targetEntity = SendActionUsageImpl.class), 
                @MetaValue(value = "StateUsage", targetEntity = StateUsageImpl.class), 
                @MetaValue(value = "SuccessionAsUsage", targetEntity = SuccessionAsUsageImpl.class), 
                @MetaValue(value = "SuccessionFlowConnectionUsage", targetEntity = SuccessionFlowConnectionUsageImpl.class), 
                @MetaValue(value = "TerminateActionUsage", targetEntity = TerminateActionUsageImpl.class), 
                @MetaValue(value = "TransitionUsage", targetEntity = TransitionUsageImpl.class), 
                @MetaValue(value = "Usage", targetEntity = UsageImpl.class), 
                @MetaValue(value = "UseCaseUsage", targetEntity = UseCaseUsageImpl.class), 
                @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class), 
                @MetaValue(value = "ViewUsage", targetEntity = ViewUsageImpl.class), 
                @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class), 
                @MetaValue(value = "WhileLoopActionUsage", targetEntity = WhileLoopActionUsageImpl.class), 
        }),
        @AnyMetaDef(name = "UseCaseDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "UseCaseDefinition", targetEntity = UseCaseDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "UseCaseUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "IncludeUseCaseUsage", targetEntity = IncludeUseCaseUsageImpl.class), 
                @MetaValue(value = "UseCaseUsage", targetEntity = UseCaseUsageImpl.class), 
        }),
        @AnyMetaDef(name = "VariantMembershipMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "VariantMembership", targetEntity = VariantMembershipImpl.class), 
        }),
        @AnyMetaDef(name = "VerificationCaseDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "VerificationCaseDefinition", targetEntity = VerificationCaseDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "VerificationCaseUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "VerificationCaseUsage", targetEntity = VerificationCaseUsageImpl.class), 
        }),
        @AnyMetaDef(name = "ViewDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ViewDefinition", targetEntity = ViewDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "ViewRenderingMembershipMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ViewRenderingMembership", targetEntity = ViewRenderingMembershipImpl.class), 
        }),
        @AnyMetaDef(name = "ViewUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ViewUsage", targetEntity = ViewUsageImpl.class), 
        }),
        @AnyMetaDef(name = "ViewpointDefinitionMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ViewpointDefinition", targetEntity = ViewpointDefinitionImpl.class), 
        }),
        @AnyMetaDef(name = "ViewpointUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "ViewpointUsage", targetEntity = ViewpointUsageImpl.class), 
        }),
        @AnyMetaDef(name = "WhileLoopActionUsageMetaDef", metaType = "string", idType = "java.util.UUID", metaValues = {
                @MetaValue(value = "WhileLoopActionUsage", targetEntity = WhileLoopActionUsageImpl.class), 
        }),
})
@GenericGenerators(value = {
        @GenericGenerator(name = "UseExistingOrGenerateUUIDGenerator", strategy = "jpa.UseExistingOrGenerateUUIDGenerator")
})
package org.omg.sysml.metamodel.impl;

import org.hibernate.annotations.AnyMetaDef;
import org.hibernate.annotations.AnyMetaDefs;
import org.hibernate.annotations.GenericGenerators;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.MetaValue;